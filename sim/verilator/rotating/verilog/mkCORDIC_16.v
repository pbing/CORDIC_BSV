//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
//
// On Tue Nov  9 19:33:39 CET 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_request_put                O     1
// response_get                   O    50
// RDY_response_get               O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// request_put                    I    48
// EN_request_put                 I     1
// EN_response_get                I     1
//
// Combinational paths from inputs to outputs:
//   EN_response_get -> RDY_request_put
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCORDIC_16(CLK,
		   RST_N,

		   request_put,
		   EN_request_put,
		   RDY_request_put,

		   EN_response_get,
		   response_get,
		   RDY_response_get);
  parameter [0 : 0] mode = 1'b0;
  input  CLK;
  input  RST_N;

  // action method request_put
  input  [47 : 0] request_put;
  input  EN_request_put;
  output RDY_request_put;

  // actionvalue method response_get
  input  EN_response_get;
  output [49 : 0] response_get;
  output RDY_response_get;

  // signals for module outputs
  wire [49 : 0] response_get;
  wire RDY_request_put, RDY_response_get;

  // inlined wires
  wire [62 : 0] m_stg_0_rv$port1__read,
		m_stg_0_rv$port1__write_1,
		m_stg_0_rv$port2__read,
		m_stg_10_rv$port1__read,
		m_stg_10_rv$port1__write_1,
		m_stg_10_rv$port2__read,
		m_stg_11_rv$port1__read,
		m_stg_11_rv$port1__write_1,
		m_stg_11_rv$port2__read,
		m_stg_12_rv$port1__read,
		m_stg_12_rv$port1__write_1,
		m_stg_12_rv$port2__read,
		m_stg_13_rv$port1__read,
		m_stg_13_rv$port1__write_1,
		m_stg_13_rv$port2__read,
		m_stg_14_rv$port1__read,
		m_stg_14_rv$port1__write_1,
		m_stg_14_rv$port2__read,
		m_stg_15_rv$port1__read,
		m_stg_15_rv$port1__write_1,
		m_stg_15_rv$port2__read,
		m_stg_16_rv$port1__read,
		m_stg_16_rv$port1__write_1,
		m_stg_16_rv$port2__read,
		m_stg_17_rv$port1__read,
		m_stg_17_rv$port1__write_1,
		m_stg_17_rv$port2__read,
		m_stg_18_rv$port1__read,
		m_stg_18_rv$port1__write_1,
		m_stg_18_rv$port2__read,
		m_stg_19_rv$port1__read,
		m_stg_19_rv$port1__write_1,
		m_stg_19_rv$port2__read,
		m_stg_1_rv$port1__read,
		m_stg_1_rv$port1__write_1,
		m_stg_1_rv$port2__read,
		m_stg_2_rv$port1__read,
		m_stg_2_rv$port1__write_1,
		m_stg_2_rv$port2__read,
		m_stg_3_rv$port1__read,
		m_stg_3_rv$port1__write_1,
		m_stg_3_rv$port2__read,
		m_stg_4_rv$port1__read,
		m_stg_4_rv$port1__write_1,
		m_stg_4_rv$port2__read,
		m_stg_5_rv$port1__read,
		m_stg_5_rv$port1__write_1,
		m_stg_5_rv$port2__read,
		m_stg_6_rv$port1__read,
		m_stg_6_rv$port1__write_1,
		m_stg_6_rv$port2__read,
		m_stg_7_rv$port1__read,
		m_stg_7_rv$port1__write_1,
		m_stg_7_rv$port2__read,
		m_stg_8_rv$port1__read,
		m_stg_8_rv$port1__write_1,
		m_stg_8_rv$port2__read,
		m_stg_9_rv$port1__read,
		m_stg_9_rv$port1__write_1,
		m_stg_9_rv$port2__read;
  wire m_stg_0_rv$EN_port0__write,
       m_stg_10_rv$EN_port0__write,
       m_stg_10_rv$EN_port1__write,
       m_stg_11_rv$EN_port0__write,
       m_stg_11_rv$EN_port1__write,
       m_stg_12_rv$EN_port0__write,
       m_stg_12_rv$EN_port1__write,
       m_stg_13_rv$EN_port0__write,
       m_stg_13_rv$EN_port1__write,
       m_stg_14_rv$EN_port0__write,
       m_stg_14_rv$EN_port1__write,
       m_stg_15_rv$EN_port0__write,
       m_stg_15_rv$EN_port1__write,
       m_stg_16_rv$EN_port0__write,
       m_stg_16_rv$EN_port1__write,
       m_stg_17_rv$EN_port0__write,
       m_stg_17_rv$EN_port1__write,
       m_stg_18_rv$EN_port0__write,
       m_stg_18_rv$EN_port1__write,
       m_stg_19_rv$EN_port1__write,
       m_stg_1_rv$EN_port0__write,
       m_stg_1_rv$EN_port1__write,
       m_stg_2_rv$EN_port0__write,
       m_stg_2_rv$EN_port1__write,
       m_stg_3_rv$EN_port0__write,
       m_stg_3_rv$EN_port1__write,
       m_stg_4_rv$EN_port0__write,
       m_stg_4_rv$EN_port1__write,
       m_stg_5_rv$EN_port0__write,
       m_stg_5_rv$EN_port1__write,
       m_stg_6_rv$EN_port0__write,
       m_stg_6_rv$EN_port1__write,
       m_stg_7_rv$EN_port0__write,
       m_stg_7_rv$EN_port1__write,
       m_stg_8_rv$EN_port0__write,
       m_stg_8_rv$EN_port1__write,
       m_stg_9_rv$EN_port0__write,
       m_stg_9_rv$EN_port1__write;

  // register m_stg_0_rv
  reg [62 : 0] m_stg_0_rv;
  wire [62 : 0] m_stg_0_rv$D_IN;
  wire m_stg_0_rv$EN;

  // register m_stg_10_rv
  reg [62 : 0] m_stg_10_rv;
  wire [62 : 0] m_stg_10_rv$D_IN;
  wire m_stg_10_rv$EN;

  // register m_stg_11_rv
  reg [62 : 0] m_stg_11_rv;
  wire [62 : 0] m_stg_11_rv$D_IN;
  wire m_stg_11_rv$EN;

  // register m_stg_12_rv
  reg [62 : 0] m_stg_12_rv;
  wire [62 : 0] m_stg_12_rv$D_IN;
  wire m_stg_12_rv$EN;

  // register m_stg_13_rv
  reg [62 : 0] m_stg_13_rv;
  wire [62 : 0] m_stg_13_rv$D_IN;
  wire m_stg_13_rv$EN;

  // register m_stg_14_rv
  reg [62 : 0] m_stg_14_rv;
  wire [62 : 0] m_stg_14_rv$D_IN;
  wire m_stg_14_rv$EN;

  // register m_stg_15_rv
  reg [62 : 0] m_stg_15_rv;
  wire [62 : 0] m_stg_15_rv$D_IN;
  wire m_stg_15_rv$EN;

  // register m_stg_16_rv
  reg [62 : 0] m_stg_16_rv;
  wire [62 : 0] m_stg_16_rv$D_IN;
  wire m_stg_16_rv$EN;

  // register m_stg_17_rv
  reg [62 : 0] m_stg_17_rv;
  wire [62 : 0] m_stg_17_rv$D_IN;
  wire m_stg_17_rv$EN;

  // register m_stg_18_rv
  reg [62 : 0] m_stg_18_rv;
  wire [62 : 0] m_stg_18_rv$D_IN;
  wire m_stg_18_rv$EN;

  // register m_stg_19_rv
  reg [62 : 0] m_stg_19_rv;
  wire [62 : 0] m_stg_19_rv$D_IN;
  wire m_stg_19_rv$EN;

  // register m_stg_1_rv
  reg [62 : 0] m_stg_1_rv;
  wire [62 : 0] m_stg_1_rv$D_IN;
  wire m_stg_1_rv$EN;

  // register m_stg_2_rv
  reg [62 : 0] m_stg_2_rv;
  wire [62 : 0] m_stg_2_rv$D_IN;
  wire m_stg_2_rv$EN;

  // register m_stg_3_rv
  reg [62 : 0] m_stg_3_rv;
  wire [62 : 0] m_stg_3_rv$D_IN;
  wire m_stg_3_rv$EN;

  // register m_stg_4_rv
  reg [62 : 0] m_stg_4_rv;
  wire [62 : 0] m_stg_4_rv$D_IN;
  wire m_stg_4_rv$EN;

  // register m_stg_5_rv
  reg [62 : 0] m_stg_5_rv;
  wire [62 : 0] m_stg_5_rv$D_IN;
  wire m_stg_5_rv$EN;

  // register m_stg_6_rv
  reg [62 : 0] m_stg_6_rv;
  wire [62 : 0] m_stg_6_rv$D_IN;
  wire m_stg_6_rv$EN;

  // register m_stg_7_rv
  reg [62 : 0] m_stg_7_rv;
  wire [62 : 0] m_stg_7_rv$D_IN;
  wire m_stg_7_rv$EN;

  // register m_stg_8_rv
  reg [62 : 0] m_stg_8_rv;
  wire [62 : 0] m_stg_8_rv$D_IN;
  wire m_stg_8_rv$EN;

  // register m_stg_9_rv
  reg [62 : 0] m_stg_9_rv;
  wire [62 : 0] m_stg_9_rv$D_IN;
  wire m_stg_9_rv$EN;

  // remaining internal signals
  wire [61 : 0] IF_mode_AND_NOT_m_stg_0_rv_port0__read_BIT_40__ETC___d28,
		IF_mode_AND_NOT_m_stg_10_rv_port0__read__73_BI_ETC___d298,
		IF_mode_AND_NOT_m_stg_11_rv_port0__read__00_BI_ETC___d325,
		IF_mode_AND_NOT_m_stg_12_rv_port0__read__27_BI_ETC___d352,
		IF_mode_AND_NOT_m_stg_13_rv_port0__read__54_BI_ETC___d379,
		IF_mode_AND_NOT_m_stg_14_rv_port0__read__81_BI_ETC___d406,
		IF_mode_AND_NOT_m_stg_15_rv_port0__read__08_BI_ETC___d433,
		IF_mode_AND_NOT_m_stg_16_rv_port0__read__35_BI_ETC___d460,
		IF_mode_AND_NOT_m_stg_17_rv_port0__read__62_BI_ETC___d487,
		IF_mode_AND_NOT_m_stg_1_rv_port0__read__0_BIT__ETC___d55,
		IF_mode_AND_NOT_m_stg_2_rv_port0__read__7_BIT__ETC___d82,
		IF_mode_AND_NOT_m_stg_3_rv_port0__read__4_BIT__ETC___d109,
		IF_mode_AND_NOT_m_stg_4_rv_port0__read__11_BIT_ETC___d136,
		IF_mode_AND_NOT_m_stg_5_rv_port0__read__38_BIT_ETC___d163,
		IF_mode_AND_NOT_m_stg_6_rv_port0__read__65_BIT_ETC___d190,
		IF_mode_AND_NOT_m_stg_7_rv_port0__read__92_BIT_ETC___d217,
		IF_mode_AND_NOT_m_stg_8_rv_port0__read__19_BIT_ETC___d244,
		IF_mode_AND_NOT_m_stg_9_rv_port0__read__46_BIT_ETC___d271,
		IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d543,
		IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d544;
  wire [20 : 0] IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d538,
		SEXT_m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q6,
		SEXT_m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q3,
		SEXT_request_put_BITS_31_TO_16_13___d514,
		SEXT_request_put_BITS_47_TO_32_09___d510,
		m_stg_0_rv_BITS_40_TO_20__q10,
		m_stg_0_rv_BITS_61_TO_41__q15,
		m_stg_0_rv_port0__read_BITS_40_TO_20_6_SRA_0___d17,
		m_stg_0_rv_port0__read_BITS_61_TO_41_5_SRA_0___d19,
		m_stg_10_rv_BITS_40_TO_20__q48,
		m_stg_10_rv_BITS_61_TO_41__q50,
		m_stg_10_rv_port0__read__73_BITS_40_TO_20_86_S_ETC___d287,
		m_stg_10_rv_port0__read__73_BITS_61_TO_41_85_S_ETC___d289,
		m_stg_11_rv_BITS_40_TO_20__q52,
		m_stg_11_rv_BITS_61_TO_41__q54,
		m_stg_11_rv_port0__read__00_BITS_40_TO_20_13_S_ETC___d314,
		m_stg_11_rv_port0__read__00_BITS_61_TO_41_12_S_ETC___d316,
		m_stg_12_rv_BITS_40_TO_20__q56,
		m_stg_12_rv_BITS_61_TO_41__q58,
		m_stg_12_rv_port0__read__27_BITS_40_TO_20_40_S_ETC___d341,
		m_stg_12_rv_port0__read__27_BITS_61_TO_41_39_S_ETC___d343,
		m_stg_13_rv_BITS_40_TO_20__q60,
		m_stg_13_rv_BITS_61_TO_41__q62,
		m_stg_13_rv_port0__read__54_BITS_40_TO_20_67_S_ETC___d368,
		m_stg_13_rv_port0__read__54_BITS_61_TO_41_66_S_ETC___d370,
		m_stg_14_rv_BITS_40_TO_20__q64,
		m_stg_14_rv_BITS_61_TO_41__q66,
		m_stg_14_rv_port0__read__81_BITS_40_TO_20_94_S_ETC___d395,
		m_stg_14_rv_port0__read__81_BITS_61_TO_41_93_S_ETC___d397,
		m_stg_15_rv_BITS_40_TO_20__q68,
		m_stg_15_rv_BITS_61_TO_41__q70,
		m_stg_15_rv_port0__read__08_BITS_40_TO_20_21_S_ETC___d422,
		m_stg_15_rv_port0__read__08_BITS_61_TO_41_20_S_ETC___d424,
		m_stg_16_rv_BITS_40_TO_20__q72,
		m_stg_16_rv_BITS_61_TO_41__q74,
		m_stg_16_rv_port0__read__35_BITS_40_TO_20_48_S_ETC___d449,
		m_stg_16_rv_port0__read__35_BITS_61_TO_41_47_S_ETC___d451,
		m_stg_17_rv_BITS_40_TO_20__q76,
		m_stg_17_rv_BITS_61_TO_41__q78,
		m_stg_17_rv_port0__read__62_BITS_40_TO_20_75_S_ETC___d476,
		m_stg_17_rv_port0__read__62_BITS_61_TO_41_74_S_ETC___d478,
		m_stg_19_rv_BITS_40_TO_20__q4,
		m_stg_19_rv_BITS_61_TO_41__q1,
		m_stg_1_rv_BITS_40_TO_20__q11,
		m_stg_1_rv_BITS_61_TO_41__q13,
		m_stg_1_rv_port0__read__0_BITS_40_TO_20_3_SRA_1___d44,
		m_stg_1_rv_port0__read__0_BITS_61_TO_41_2_SRA_1___d46,
		m_stg_2_rv_BITS_40_TO_20__q16,
		m_stg_2_rv_BITS_61_TO_41__q18,
		m_stg_2_rv_port0__read__7_BITS_40_TO_20_0_SRA_2___d71,
		m_stg_2_rv_port0__read__7_BITS_61_TO_41_9_SRA_2___d73,
		m_stg_3_rv_BITS_40_TO_20__q20,
		m_stg_3_rv_BITS_61_TO_41__q22,
		m_stg_3_rv_port0__read__4_BITS_40_TO_20_7_SRA_3___d98,
		m_stg_3_rv_port0__read__4_BITS_61_TO_41_6_SRA_3___d100,
		m_stg_4_rv_BITS_40_TO_20__q24,
		m_stg_4_rv_BITS_61_TO_41__q26,
		m_stg_4_rv_port0__read__11_BITS_40_TO_20_24_SRA_4___d125,
		m_stg_4_rv_port0__read__11_BITS_61_TO_41_23_SRA_4___d127,
		m_stg_5_rv_BITS_40_TO_20__q28,
		m_stg_5_rv_BITS_61_TO_41__q30,
		m_stg_5_rv_port0__read__38_BITS_40_TO_20_51_SRA_5___d152,
		m_stg_5_rv_port0__read__38_BITS_61_TO_41_50_SRA_5___d154,
		m_stg_6_rv_BITS_40_TO_20__q32,
		m_stg_6_rv_BITS_61_TO_41__q34,
		m_stg_6_rv_port0__read__65_BITS_40_TO_20_78_SRA_6___d179,
		m_stg_6_rv_port0__read__65_BITS_61_TO_41_77_SRA_6___d181,
		m_stg_7_rv_BITS_40_TO_20__q36,
		m_stg_7_rv_BITS_61_TO_41__q38,
		m_stg_7_rv_port0__read__92_BITS_40_TO_20_05_SRA_7___d206,
		m_stg_7_rv_port0__read__92_BITS_61_TO_41_04_SRA_7___d208,
		m_stg_8_rv_BITS_40_TO_20__q40,
		m_stg_8_rv_BITS_61_TO_41__q42,
		m_stg_8_rv_port0__read__19_BITS_40_TO_20_32_SRA_8___d233,
		m_stg_8_rv_port0__read__19_BITS_61_TO_41_31_SRA_8___d235,
		m_stg_9_rv_BITS_40_TO_20__q44,
		m_stg_9_rv_BITS_61_TO_41__q46,
		m_stg_9_rv_port0__read__46_BITS_40_TO_20_59_SRA_9___d260,
		m_stg_9_rv_port0__read__46_BITS_61_TO_41_58_SRA_9___d262;
  wire [19 : 0] SEXT_m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q9,
		SEXT_request_put_BITS_15_TO_02__q83,
		SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521,
		m_stg_19_rv_BITS_19_TO_0__q7,
		m_stg_1_rv_BITS_40_TO_201_BITS_20_TO_1__q12,
		m_stg_1_rv_BITS_61_TO_413_BITS_20_TO_1__q14;
  wire [18 : 0] m_stg_2_rv_BITS_40_TO_206_BITS_20_TO_2__q17,
		m_stg_2_rv_BITS_61_TO_418_BITS_20_TO_2__q19;
  wire [17 : 0] m_stg_3_rv_BITS_40_TO_200_BITS_20_TO_3__q21,
		m_stg_3_rv_BITS_61_TO_412_BITS_20_TO_3__q23;
  wire [16 : 0] m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q5,
		m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q2,
		m_stg_4_rv_BITS_40_TO_204_BITS_20_TO_4__q25,
		m_stg_4_rv_BITS_61_TO_416_BITS_20_TO_4__q27;
  wire [15 : 0] m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q8,
		m_stg_5_rv_BITS_40_TO_208_BITS_20_TO_5__q29,
		m_stg_5_rv_BITS_61_TO_410_BITS_20_TO_5__q31,
		request_put_BITS_15_TO_0__q82,
		request_put_BITS_31_TO_16__q81,
		request_put_BITS_47_TO_32__q80;
  wire [14 : 0] m_stg_6_rv_BITS_40_TO_202_BITS_20_TO_6__q33,
		m_stg_6_rv_BITS_61_TO_414_BITS_20_TO_6__q35;
  wire [13 : 0] m_stg_7_rv_BITS_40_TO_206_BITS_20_TO_7__q37,
		m_stg_7_rv_BITS_61_TO_418_BITS_20_TO_7__q39;
  wire [12 : 0] m_stg_8_rv_BITS_40_TO_200_BITS_20_TO_8__q41,
		m_stg_8_rv_BITS_61_TO_412_BITS_20_TO_8__q43;
  wire [11 : 0] m_stg_9_rv_BITS_40_TO_204_BITS_20_TO_9__q45,
		m_stg_9_rv_BITS_61_TO_416_BITS_20_TO_9__q47;
  wire [10 : 0] m_stg_10_rv_BITS_40_TO_208_BITS_20_TO_10__q49,
		m_stg_10_rv_BITS_61_TO_410_BITS_20_TO_10__q51;
  wire [9 : 0] m_stg_11_rv_BITS_40_TO_202_BITS_20_TO_11__q53,
	       m_stg_11_rv_BITS_61_TO_414_BITS_20_TO_11__q55;
  wire [8 : 0] m_stg_12_rv_BITS_40_TO_206_BITS_20_TO_12__q57,
	       m_stg_12_rv_BITS_61_TO_418_BITS_20_TO_12__q59;
  wire [7 : 0] m_stg_13_rv_BITS_40_TO_200_BITS_20_TO_13__q61,
	       m_stg_13_rv_BITS_61_TO_412_BITS_20_TO_13__q63;
  wire [6 : 0] m_stg_14_rv_BITS_40_TO_204_BITS_20_TO_14__q65,
	       m_stg_14_rv_BITS_61_TO_416_BITS_20_TO_14__q67;
  wire [5 : 0] m_stg_15_rv_BITS_40_TO_208_BITS_20_TO_15__q69,
	       m_stg_15_rv_BITS_61_TO_410_BITS_20_TO_15__q71;
  wire [4 : 0] m_stg_16_rv_BITS_40_TO_202_BITS_20_TO_16__q73,
	       m_stg_16_rv_BITS_61_TO_414_BITS_20_TO_16__q75;
  wire [3 : 0] m_stg_17_rv_BITS_40_TO_206_BITS_20_TO_17__q77,
	       m_stg_17_rv_BITS_61_TO_418_BITS_20_TO_17__q79;
  wire mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d524,
       mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d536;

  // action method request_put
  assign RDY_request_put = !m_stg_0_rv$port1__read[62] ;

  // actionvalue method response_get
  assign response_get =
	     { SEXT_m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q3[16:0],
	       SEXT_m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q6[16:0],
	       SEXT_m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q9[15:0] } ;
  assign RDY_response_get = m_stg_19_rv[62] ;

  // inlined wires
  assign m_stg_0_rv$EN_port0__write =
	     m_stg_0_rv[62] && !m_stg_1_rv$port1__read[62] ;
  assign m_stg_0_rv$port1__read =
	     m_stg_0_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_0_rv ;
  assign m_stg_0_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d544 } ;
  assign m_stg_0_rv$port2__read =
	     EN_request_put ?
	       m_stg_0_rv$port1__write_1 :
	       m_stg_0_rv$port1__read ;
  assign m_stg_1_rv$EN_port0__write =
	     m_stg_1_rv[62] && !m_stg_2_rv$port1__read[62] ;
  assign m_stg_1_rv$port1__read =
	     m_stg_1_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_1_rv ;
  assign m_stg_1_rv$EN_port1__write =
	     m_stg_0_rv[62] && !m_stg_1_rv$port1__read[62] ;
  assign m_stg_1_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_0_rv_port0__read_BIT_40__ETC___d28 } ;
  assign m_stg_1_rv$port2__read =
	     m_stg_1_rv$EN_port1__write ?
	       m_stg_1_rv$port1__write_1 :
	       m_stg_1_rv$port1__read ;
  assign m_stg_2_rv$EN_port0__write =
	     m_stg_2_rv[62] && !m_stg_3_rv$port1__read[62] ;
  assign m_stg_2_rv$port1__read =
	     m_stg_2_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_2_rv ;
  assign m_stg_2_rv$EN_port1__write =
	     m_stg_1_rv[62] && !m_stg_2_rv$port1__read[62] ;
  assign m_stg_2_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_1_rv_port0__read__0_BIT__ETC___d55 } ;
  assign m_stg_2_rv$port2__read =
	     m_stg_2_rv$EN_port1__write ?
	       m_stg_2_rv$port1__write_1 :
	       m_stg_2_rv$port1__read ;
  assign m_stg_3_rv$EN_port0__write =
	     m_stg_3_rv[62] && !m_stg_4_rv$port1__read[62] ;
  assign m_stg_3_rv$port1__read =
	     m_stg_3_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_3_rv ;
  assign m_stg_3_rv$EN_port1__write =
	     m_stg_2_rv[62] && !m_stg_3_rv$port1__read[62] ;
  assign m_stg_3_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_2_rv_port0__read__7_BIT__ETC___d82 } ;
  assign m_stg_3_rv$port2__read =
	     m_stg_3_rv$EN_port1__write ?
	       m_stg_3_rv$port1__write_1 :
	       m_stg_3_rv$port1__read ;
  assign m_stg_4_rv$EN_port0__write =
	     m_stg_4_rv[62] && !m_stg_5_rv$port1__read[62] ;
  assign m_stg_4_rv$port1__read =
	     m_stg_4_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_4_rv ;
  assign m_stg_4_rv$EN_port1__write =
	     m_stg_3_rv[62] && !m_stg_4_rv$port1__read[62] ;
  assign m_stg_4_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_3_rv_port0__read__4_BIT__ETC___d109 } ;
  assign m_stg_4_rv$port2__read =
	     m_stg_4_rv$EN_port1__write ?
	       m_stg_4_rv$port1__write_1 :
	       m_stg_4_rv$port1__read ;
  assign m_stg_5_rv$EN_port0__write =
	     m_stg_5_rv[62] && !m_stg_6_rv$port1__read[62] ;
  assign m_stg_5_rv$port1__read =
	     m_stg_5_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_5_rv ;
  assign m_stg_5_rv$EN_port1__write =
	     m_stg_4_rv[62] && !m_stg_5_rv$port1__read[62] ;
  assign m_stg_5_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_4_rv_port0__read__11_BIT_ETC___d136 } ;
  assign m_stg_5_rv$port2__read =
	     m_stg_5_rv$EN_port1__write ?
	       m_stg_5_rv$port1__write_1 :
	       m_stg_5_rv$port1__read ;
  assign m_stg_6_rv$EN_port0__write =
	     m_stg_6_rv[62] && !m_stg_7_rv$port1__read[62] ;
  assign m_stg_6_rv$port1__read =
	     m_stg_6_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_6_rv ;
  assign m_stg_6_rv$EN_port1__write =
	     m_stg_5_rv[62] && !m_stg_6_rv$port1__read[62] ;
  assign m_stg_6_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_5_rv_port0__read__38_BIT_ETC___d163 } ;
  assign m_stg_6_rv$port2__read =
	     m_stg_6_rv$EN_port1__write ?
	       m_stg_6_rv$port1__write_1 :
	       m_stg_6_rv$port1__read ;
  assign m_stg_7_rv$EN_port0__write =
	     m_stg_7_rv[62] && !m_stg_8_rv$port1__read[62] ;
  assign m_stg_7_rv$port1__read =
	     m_stg_7_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_7_rv ;
  assign m_stg_7_rv$EN_port1__write =
	     m_stg_6_rv[62] && !m_stg_7_rv$port1__read[62] ;
  assign m_stg_7_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_6_rv_port0__read__65_BIT_ETC___d190 } ;
  assign m_stg_7_rv$port2__read =
	     m_stg_7_rv$EN_port1__write ?
	       m_stg_7_rv$port1__write_1 :
	       m_stg_7_rv$port1__read ;
  assign m_stg_8_rv$EN_port0__write =
	     m_stg_8_rv[62] && !m_stg_9_rv$port1__read[62] ;
  assign m_stg_8_rv$port1__read =
	     m_stg_8_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_8_rv ;
  assign m_stg_8_rv$EN_port1__write =
	     m_stg_7_rv[62] && !m_stg_8_rv$port1__read[62] ;
  assign m_stg_8_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_7_rv_port0__read__92_BIT_ETC___d217 } ;
  assign m_stg_8_rv$port2__read =
	     m_stg_8_rv$EN_port1__write ?
	       m_stg_8_rv$port1__write_1 :
	       m_stg_8_rv$port1__read ;
  assign m_stg_9_rv$EN_port0__write =
	     m_stg_9_rv[62] && !m_stg_10_rv$port1__read[62] ;
  assign m_stg_9_rv$port1__read =
	     m_stg_9_rv$EN_port0__write ? 63'h2AAAAAAAAAAAAAAA : m_stg_9_rv ;
  assign m_stg_9_rv$EN_port1__write =
	     m_stg_8_rv[62] && !m_stg_9_rv$port1__read[62] ;
  assign m_stg_9_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_8_rv_port0__read__19_BIT_ETC___d244 } ;
  assign m_stg_9_rv$port2__read =
	     m_stg_9_rv$EN_port1__write ?
	       m_stg_9_rv$port1__write_1 :
	       m_stg_9_rv$port1__read ;
  assign m_stg_10_rv$EN_port0__write =
	     m_stg_10_rv[62] && !m_stg_11_rv$port1__read[62] ;
  assign m_stg_10_rv$port1__read =
	     m_stg_10_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_10_rv ;
  assign m_stg_10_rv$EN_port1__write =
	     m_stg_9_rv[62] && !m_stg_10_rv$port1__read[62] ;
  assign m_stg_10_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_9_rv_port0__read__46_BIT_ETC___d271 } ;
  assign m_stg_10_rv$port2__read =
	     m_stg_10_rv$EN_port1__write ?
	       m_stg_10_rv$port1__write_1 :
	       m_stg_10_rv$port1__read ;
  assign m_stg_11_rv$EN_port0__write =
	     m_stg_11_rv[62] && !m_stg_12_rv$port1__read[62] ;
  assign m_stg_11_rv$port1__read =
	     m_stg_11_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_11_rv ;
  assign m_stg_11_rv$EN_port1__write =
	     m_stg_10_rv[62] && !m_stg_11_rv$port1__read[62] ;
  assign m_stg_11_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_10_rv_port0__read__73_BI_ETC___d298 } ;
  assign m_stg_11_rv$port2__read =
	     m_stg_11_rv$EN_port1__write ?
	       m_stg_11_rv$port1__write_1 :
	       m_stg_11_rv$port1__read ;
  assign m_stg_12_rv$EN_port0__write =
	     m_stg_12_rv[62] && !m_stg_13_rv$port1__read[62] ;
  assign m_stg_12_rv$port1__read =
	     m_stg_12_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_12_rv ;
  assign m_stg_12_rv$EN_port1__write =
	     m_stg_11_rv[62] && !m_stg_12_rv$port1__read[62] ;
  assign m_stg_12_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_11_rv_port0__read__00_BI_ETC___d325 } ;
  assign m_stg_12_rv$port2__read =
	     m_stg_12_rv$EN_port1__write ?
	       m_stg_12_rv$port1__write_1 :
	       m_stg_12_rv$port1__read ;
  assign m_stg_13_rv$EN_port0__write =
	     m_stg_13_rv[62] && !m_stg_14_rv$port1__read[62] ;
  assign m_stg_13_rv$port1__read =
	     m_stg_13_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_13_rv ;
  assign m_stg_13_rv$EN_port1__write =
	     m_stg_12_rv[62] && !m_stg_13_rv$port1__read[62] ;
  assign m_stg_13_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_12_rv_port0__read__27_BI_ETC___d352 } ;
  assign m_stg_13_rv$port2__read =
	     m_stg_13_rv$EN_port1__write ?
	       m_stg_13_rv$port1__write_1 :
	       m_stg_13_rv$port1__read ;
  assign m_stg_14_rv$EN_port0__write =
	     m_stg_14_rv[62] && !m_stg_15_rv$port1__read[62] ;
  assign m_stg_14_rv$port1__read =
	     m_stg_14_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_14_rv ;
  assign m_stg_14_rv$EN_port1__write =
	     m_stg_13_rv[62] && !m_stg_14_rv$port1__read[62] ;
  assign m_stg_14_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_13_rv_port0__read__54_BI_ETC___d379 } ;
  assign m_stg_14_rv$port2__read =
	     m_stg_14_rv$EN_port1__write ?
	       m_stg_14_rv$port1__write_1 :
	       m_stg_14_rv$port1__read ;
  assign m_stg_15_rv$EN_port0__write =
	     m_stg_15_rv[62] && !m_stg_16_rv$port1__read[62] ;
  assign m_stg_15_rv$port1__read =
	     m_stg_15_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_15_rv ;
  assign m_stg_15_rv$EN_port1__write =
	     m_stg_14_rv[62] && !m_stg_15_rv$port1__read[62] ;
  assign m_stg_15_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_14_rv_port0__read__81_BI_ETC___d406 } ;
  assign m_stg_15_rv$port2__read =
	     m_stg_15_rv$EN_port1__write ?
	       m_stg_15_rv$port1__write_1 :
	       m_stg_15_rv$port1__read ;
  assign m_stg_16_rv$EN_port0__write =
	     m_stg_16_rv[62] && !m_stg_17_rv$port1__read[62] ;
  assign m_stg_16_rv$port1__read =
	     m_stg_16_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_16_rv ;
  assign m_stg_16_rv$EN_port1__write =
	     m_stg_15_rv[62] && !m_stg_16_rv$port1__read[62] ;
  assign m_stg_16_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_15_rv_port0__read__08_BI_ETC___d433 } ;
  assign m_stg_16_rv$port2__read =
	     m_stg_16_rv$EN_port1__write ?
	       m_stg_16_rv$port1__write_1 :
	       m_stg_16_rv$port1__read ;
  assign m_stg_17_rv$EN_port0__write =
	     m_stg_17_rv[62] && !m_stg_18_rv$port1__read[62] ;
  assign m_stg_17_rv$port1__read =
	     m_stg_17_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_17_rv ;
  assign m_stg_17_rv$EN_port1__write =
	     m_stg_16_rv[62] && !m_stg_17_rv$port1__read[62] ;
  assign m_stg_17_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_16_rv_port0__read__35_BI_ETC___d460 } ;
  assign m_stg_17_rv$port2__read =
	     m_stg_17_rv$EN_port1__write ?
	       m_stg_17_rv$port1__write_1 :
	       m_stg_17_rv$port1__read ;
  assign m_stg_18_rv$EN_port0__write =
	     m_stg_18_rv[62] && !m_stg_19_rv$port1__read[62] ;
  assign m_stg_18_rv$port1__read =
	     m_stg_18_rv$EN_port0__write ?
	       63'h2AAAAAAAAAAAAAAA :
	       m_stg_18_rv ;
  assign m_stg_18_rv$EN_port1__write =
	     m_stg_17_rv[62] && !m_stg_18_rv$port1__read[62] ;
  assign m_stg_18_rv$port1__write_1 =
	     { 1'd1,
	       IF_mode_AND_NOT_m_stg_17_rv_port0__read__62_BI_ETC___d487 } ;
  assign m_stg_18_rv$port2__read =
	     m_stg_18_rv$EN_port1__write ?
	       m_stg_18_rv$port1__write_1 :
	       m_stg_18_rv$port1__read ;
  assign m_stg_19_rv$port1__read =
	     EN_response_get ? 63'h2AAAAAAAAAAAAAAA : m_stg_19_rv ;
  assign m_stg_19_rv$EN_port1__write =
	     m_stg_18_rv[62] && !m_stg_19_rv$port1__read[62] ;
  assign m_stg_19_rv$port1__write_1 =
	     { 1'd1,
	       m_stg_18_rv[61:41] + (m_stg_18_rv[45] ? 21'd8 : 21'd7),
	       m_stg_18_rv[40:20] + (m_stg_18_rv[24] ? 21'd8 : 21'd7),
	       m_stg_18_rv[19:0] + (m_stg_18_rv[4] ? 20'd8 : 20'd7) } ;
  assign m_stg_19_rv$port2__read =
	     m_stg_19_rv$EN_port1__write ?
	       m_stg_19_rv$port1__write_1 :
	       m_stg_19_rv$port1__read ;

  // register m_stg_0_rv
  assign m_stg_0_rv$D_IN = m_stg_0_rv$port2__read ;
  assign m_stg_0_rv$EN = 1'b1 ;

  // register m_stg_10_rv
  assign m_stg_10_rv$D_IN = m_stg_10_rv$port2__read ;
  assign m_stg_10_rv$EN = 1'b1 ;

  // register m_stg_11_rv
  assign m_stg_11_rv$D_IN = m_stg_11_rv$port2__read ;
  assign m_stg_11_rv$EN = 1'b1 ;

  // register m_stg_12_rv
  assign m_stg_12_rv$D_IN = m_stg_12_rv$port2__read ;
  assign m_stg_12_rv$EN = 1'b1 ;

  // register m_stg_13_rv
  assign m_stg_13_rv$D_IN = m_stg_13_rv$port2__read ;
  assign m_stg_13_rv$EN = 1'b1 ;

  // register m_stg_14_rv
  assign m_stg_14_rv$D_IN = m_stg_14_rv$port2__read ;
  assign m_stg_14_rv$EN = 1'b1 ;

  // register m_stg_15_rv
  assign m_stg_15_rv$D_IN = m_stg_15_rv$port2__read ;
  assign m_stg_15_rv$EN = 1'b1 ;

  // register m_stg_16_rv
  assign m_stg_16_rv$D_IN = m_stg_16_rv$port2__read ;
  assign m_stg_16_rv$EN = 1'b1 ;

  // register m_stg_17_rv
  assign m_stg_17_rv$D_IN = m_stg_17_rv$port2__read ;
  assign m_stg_17_rv$EN = 1'b1 ;

  // register m_stg_18_rv
  assign m_stg_18_rv$D_IN = m_stg_18_rv$port2__read ;
  assign m_stg_18_rv$EN = 1'b1 ;

  // register m_stg_19_rv
  assign m_stg_19_rv$D_IN = m_stg_19_rv$port2__read ;
  assign m_stg_19_rv$EN = 1'b1 ;

  // register m_stg_1_rv
  assign m_stg_1_rv$D_IN = m_stg_1_rv$port2__read ;
  assign m_stg_1_rv$EN = 1'b1 ;

  // register m_stg_2_rv
  assign m_stg_2_rv$D_IN = m_stg_2_rv$port2__read ;
  assign m_stg_2_rv$EN = 1'b1 ;

  // register m_stg_3_rv
  assign m_stg_3_rv$D_IN = m_stg_3_rv$port2__read ;
  assign m_stg_3_rv$EN = 1'b1 ;

  // register m_stg_4_rv
  assign m_stg_4_rv$D_IN = m_stg_4_rv$port2__read ;
  assign m_stg_4_rv$EN = 1'b1 ;

  // register m_stg_5_rv
  assign m_stg_5_rv$D_IN = m_stg_5_rv$port2__read ;
  assign m_stg_5_rv$EN = 1'b1 ;

  // register m_stg_6_rv
  assign m_stg_6_rv$D_IN = m_stg_6_rv$port2__read ;
  assign m_stg_6_rv$EN = 1'b1 ;

  // register m_stg_7_rv
  assign m_stg_7_rv$D_IN = m_stg_7_rv$port2__read ;
  assign m_stg_7_rv$EN = 1'b1 ;

  // register m_stg_8_rv
  assign m_stg_8_rv$D_IN = m_stg_8_rv$port2__read ;
  assign m_stg_8_rv$EN = 1'b1 ;

  // register m_stg_9_rv
  assign m_stg_9_rv$D_IN = m_stg_9_rv$port2__read ;
  assign m_stg_9_rv$EN = 1'b1 ;

  // remaining internal signals
  assign IF_mode_AND_NOT_m_stg_0_rv_port0__read_BIT_40__ETC___d28 =
	     (mode && !m_stg_0_rv[40] || !mode && m_stg_0_rv[19]) ?
	       { m_stg_0_rv[61:41] +
		 m_stg_0_rv_port0__read_BITS_40_TO_20_6_SRA_0___d17,
		 m_stg_0_rv[40:20] -
		 m_stg_0_rv_port0__read_BITS_61_TO_41_5_SRA_0___d19,
		 m_stg_0_rv[19:0] + 20'd131072 } :
	       { m_stg_0_rv[61:41] -
		 m_stg_0_rv_port0__read_BITS_40_TO_20_6_SRA_0___d17,
		 m_stg_0_rv[40:20] +
		 m_stg_0_rv_port0__read_BITS_61_TO_41_5_SRA_0___d19,
		 m_stg_0_rv[19:0] - 20'd131072 } ;
  assign IF_mode_AND_NOT_m_stg_10_rv_port0__read__73_BI_ETC___d298 =
	     (mode && !m_stg_10_rv[40] || !mode && m_stg_10_rv[19]) ?
	       { m_stg_10_rv[61:41] +
		 m_stg_10_rv_port0__read__73_BITS_40_TO_20_86_S_ETC___d287,
		 m_stg_10_rv[40:20] -
		 m_stg_10_rv_port0__read__73_BITS_61_TO_41_85_S_ETC___d289,
		 m_stg_10_rv[19:0] + 20'd163 } :
	       { m_stg_10_rv[61:41] -
		 m_stg_10_rv_port0__read__73_BITS_40_TO_20_86_S_ETC___d287,
		 m_stg_10_rv[40:20] +
		 m_stg_10_rv_port0__read__73_BITS_61_TO_41_85_S_ETC___d289,
		 m_stg_10_rv[19:0] - 20'd163 } ;
  assign IF_mode_AND_NOT_m_stg_11_rv_port0__read__00_BI_ETC___d325 =
	     (mode && !m_stg_11_rv[40] || !mode && m_stg_11_rv[19]) ?
	       { m_stg_11_rv[61:41] +
		 m_stg_11_rv_port0__read__00_BITS_40_TO_20_13_S_ETC___d314,
		 m_stg_11_rv[40:20] -
		 m_stg_11_rv_port0__read__00_BITS_61_TO_41_12_S_ETC___d316,
		 m_stg_11_rv[19:0] + 20'd81 } :
	       { m_stg_11_rv[61:41] -
		 m_stg_11_rv_port0__read__00_BITS_40_TO_20_13_S_ETC___d314,
		 m_stg_11_rv[40:20] +
		 m_stg_11_rv_port0__read__00_BITS_61_TO_41_12_S_ETC___d316,
		 m_stg_11_rv[19:0] - 20'd81 } ;
  assign IF_mode_AND_NOT_m_stg_12_rv_port0__read__27_BI_ETC___d352 =
	     (mode && !m_stg_12_rv[40] || !mode && m_stg_12_rv[19]) ?
	       { m_stg_12_rv[61:41] +
		 m_stg_12_rv_port0__read__27_BITS_40_TO_20_40_S_ETC___d341,
		 m_stg_12_rv[40:20] -
		 m_stg_12_rv_port0__read__27_BITS_61_TO_41_39_S_ETC___d343,
		 m_stg_12_rv[19:0] + 20'd41 } :
	       { m_stg_12_rv[61:41] -
		 m_stg_12_rv_port0__read__27_BITS_40_TO_20_40_S_ETC___d341,
		 m_stg_12_rv[40:20] +
		 m_stg_12_rv_port0__read__27_BITS_61_TO_41_39_S_ETC___d343,
		 m_stg_12_rv[19:0] - 20'd41 } ;
  assign IF_mode_AND_NOT_m_stg_13_rv_port0__read__54_BI_ETC___d379 =
	     (mode && !m_stg_13_rv[40] || !mode && m_stg_13_rv[19]) ?
	       { m_stg_13_rv[61:41] +
		 m_stg_13_rv_port0__read__54_BITS_40_TO_20_67_S_ETC___d368,
		 m_stg_13_rv[40:20] -
		 m_stg_13_rv_port0__read__54_BITS_61_TO_41_66_S_ETC___d370,
		 m_stg_13_rv[19:0] + 20'd20 } :
	       { m_stg_13_rv[61:41] -
		 m_stg_13_rv_port0__read__54_BITS_40_TO_20_67_S_ETC___d368,
		 m_stg_13_rv[40:20] +
		 m_stg_13_rv_port0__read__54_BITS_61_TO_41_66_S_ETC___d370,
		 m_stg_13_rv[19:0] - 20'd20 } ;
  assign IF_mode_AND_NOT_m_stg_14_rv_port0__read__81_BI_ETC___d406 =
	     (mode && !m_stg_14_rv[40] || !mode && m_stg_14_rv[19]) ?
	       { m_stg_14_rv[61:41] +
		 m_stg_14_rv_port0__read__81_BITS_40_TO_20_94_S_ETC___d395,
		 m_stg_14_rv[40:20] -
		 m_stg_14_rv_port0__read__81_BITS_61_TO_41_93_S_ETC___d397,
		 m_stg_14_rv[19:0] + 20'd10 } :
	       { m_stg_14_rv[61:41] -
		 m_stg_14_rv_port0__read__81_BITS_40_TO_20_94_S_ETC___d395,
		 m_stg_14_rv[40:20] +
		 m_stg_14_rv_port0__read__81_BITS_61_TO_41_93_S_ETC___d397,
		 m_stg_14_rv[19:0] - 20'd10 } ;
  assign IF_mode_AND_NOT_m_stg_15_rv_port0__read__08_BI_ETC___d433 =
	     (mode && !m_stg_15_rv[40] || !mode && m_stg_15_rv[19]) ?
	       { m_stg_15_rv[61:41] +
		 m_stg_15_rv_port0__read__08_BITS_40_TO_20_21_S_ETC___d422,
		 m_stg_15_rv[40:20] -
		 m_stg_15_rv_port0__read__08_BITS_61_TO_41_20_S_ETC___d424,
		 m_stg_15_rv[19:0] + 20'd5 } :
	       { m_stg_15_rv[61:41] -
		 m_stg_15_rv_port0__read__08_BITS_40_TO_20_21_S_ETC___d422,
		 m_stg_15_rv[40:20] +
		 m_stg_15_rv_port0__read__08_BITS_61_TO_41_20_S_ETC___d424,
		 m_stg_15_rv[19:0] - 20'd5 } ;
  assign IF_mode_AND_NOT_m_stg_16_rv_port0__read__35_BI_ETC___d460 =
	     (mode && !m_stg_16_rv[40] || !mode && m_stg_16_rv[19]) ?
	       { m_stg_16_rv[61:41] +
		 m_stg_16_rv_port0__read__35_BITS_40_TO_20_48_S_ETC___d449,
		 m_stg_16_rv[40:20] -
		 m_stg_16_rv_port0__read__35_BITS_61_TO_41_47_S_ETC___d451,
		 m_stg_16_rv[19:0] + 20'd3 } :
	       { m_stg_16_rv[61:41] -
		 m_stg_16_rv_port0__read__35_BITS_40_TO_20_48_S_ETC___d449,
		 m_stg_16_rv[40:20] +
		 m_stg_16_rv_port0__read__35_BITS_61_TO_41_47_S_ETC___d451,
		 m_stg_16_rv[19:0] - 20'd3 } ;
  assign IF_mode_AND_NOT_m_stg_17_rv_port0__read__62_BI_ETC___d487 =
	     (mode && !m_stg_17_rv[40] || !mode && m_stg_17_rv[19]) ?
	       { m_stg_17_rv[61:41] +
		 m_stg_17_rv_port0__read__62_BITS_40_TO_20_75_S_ETC___d476,
		 m_stg_17_rv[40:20] -
		 m_stg_17_rv_port0__read__62_BITS_61_TO_41_74_S_ETC___d478,
		 m_stg_17_rv[19:0] + 20'd1 } :
	       { m_stg_17_rv[61:41] -
		 m_stg_17_rv_port0__read__62_BITS_40_TO_20_75_S_ETC___d476,
		 m_stg_17_rv[40:20] +
		 m_stg_17_rv_port0__read__62_BITS_61_TO_41_74_S_ETC___d478,
		 m_stg_17_rv[19:0] - 20'd1 } ;
  assign IF_mode_AND_NOT_m_stg_1_rv_port0__read__0_BIT__ETC___d55 =
	     (mode && !m_stg_1_rv[40] || !mode && m_stg_1_rv[19]) ?
	       { m_stg_1_rv[61:41] +
		 m_stg_1_rv_port0__read__0_BITS_40_TO_20_3_SRA_1___d44,
		 m_stg_1_rv[40:20] -
		 m_stg_1_rv_port0__read__0_BITS_61_TO_41_2_SRA_1___d46,
		 m_stg_1_rv[19:0] + 20'd77376 } :
	       { m_stg_1_rv[61:41] -
		 m_stg_1_rv_port0__read__0_BITS_40_TO_20_3_SRA_1___d44,
		 m_stg_1_rv[40:20] +
		 m_stg_1_rv_port0__read__0_BITS_61_TO_41_2_SRA_1___d46,
		 m_stg_1_rv[19:0] - 20'd77376 } ;
  assign IF_mode_AND_NOT_m_stg_2_rv_port0__read__7_BIT__ETC___d82 =
	     (mode && !m_stg_2_rv[40] || !mode && m_stg_2_rv[19]) ?
	       { m_stg_2_rv[61:41] +
		 m_stg_2_rv_port0__read__7_BITS_40_TO_20_0_SRA_2___d71,
		 m_stg_2_rv[40:20] -
		 m_stg_2_rv_port0__read__7_BITS_61_TO_41_9_SRA_2___d73,
		 m_stg_2_rv[19:0] + 20'd40884 } :
	       { m_stg_2_rv[61:41] -
		 m_stg_2_rv_port0__read__7_BITS_40_TO_20_0_SRA_2___d71,
		 m_stg_2_rv[40:20] +
		 m_stg_2_rv_port0__read__7_BITS_61_TO_41_9_SRA_2___d73,
		 m_stg_2_rv[19:0] - 20'd40884 } ;
  assign IF_mode_AND_NOT_m_stg_3_rv_port0__read__4_BIT__ETC___d109 =
	     (mode && !m_stg_3_rv[40] || !mode && m_stg_3_rv[19]) ?
	       { m_stg_3_rv[61:41] +
		 m_stg_3_rv_port0__read__4_BITS_40_TO_20_7_SRA_3___d98,
		 m_stg_3_rv[40:20] -
		 m_stg_3_rv_port0__read__4_BITS_61_TO_41_6_SRA_3___d100,
		 m_stg_3_rv[19:0] + 20'd20753 } :
	       { m_stg_3_rv[61:41] -
		 m_stg_3_rv_port0__read__4_BITS_40_TO_20_7_SRA_3___d98,
		 m_stg_3_rv[40:20] +
		 m_stg_3_rv_port0__read__4_BITS_61_TO_41_6_SRA_3___d100,
		 m_stg_3_rv[19:0] - 20'd20753 } ;
  assign IF_mode_AND_NOT_m_stg_4_rv_port0__read__11_BIT_ETC___d136 =
	     (mode && !m_stg_4_rv[40] || !mode && m_stg_4_rv[19]) ?
	       { m_stg_4_rv[61:41] +
		 m_stg_4_rv_port0__read__11_BITS_40_TO_20_24_SRA_4___d125,
		 m_stg_4_rv[40:20] -
		 m_stg_4_rv_port0__read__11_BITS_61_TO_41_23_SRA_4___d127,
		 m_stg_4_rv[19:0] + 20'd10417 } :
	       { m_stg_4_rv[61:41] -
		 m_stg_4_rv_port0__read__11_BITS_40_TO_20_24_SRA_4___d125,
		 m_stg_4_rv[40:20] +
		 m_stg_4_rv_port0__read__11_BITS_61_TO_41_23_SRA_4___d127,
		 m_stg_4_rv[19:0] - 20'd10417 } ;
  assign IF_mode_AND_NOT_m_stg_5_rv_port0__read__38_BIT_ETC___d163 =
	     (mode && !m_stg_5_rv[40] || !mode && m_stg_5_rv[19]) ?
	       { m_stg_5_rv[61:41] +
		 m_stg_5_rv_port0__read__38_BITS_40_TO_20_51_SRA_5___d152,
		 m_stg_5_rv[40:20] -
		 m_stg_5_rv_port0__read__38_BITS_61_TO_41_50_SRA_5___d154,
		 m_stg_5_rv[19:0] + 20'd5213 } :
	       { m_stg_5_rv[61:41] -
		 m_stg_5_rv_port0__read__38_BITS_40_TO_20_51_SRA_5___d152,
		 m_stg_5_rv[40:20] +
		 m_stg_5_rv_port0__read__38_BITS_61_TO_41_50_SRA_5___d154,
		 m_stg_5_rv[19:0] - 20'd5213 } ;
  assign IF_mode_AND_NOT_m_stg_6_rv_port0__read__65_BIT_ETC___d190 =
	     (mode && !m_stg_6_rv[40] || !mode && m_stg_6_rv[19]) ?
	       { m_stg_6_rv[61:41] +
		 m_stg_6_rv_port0__read__65_BITS_40_TO_20_78_SRA_6___d179,
		 m_stg_6_rv[40:20] -
		 m_stg_6_rv_port0__read__65_BITS_61_TO_41_77_SRA_6___d181,
		 m_stg_6_rv[19:0] + 20'd2607 } :
	       { m_stg_6_rv[61:41] -
		 m_stg_6_rv_port0__read__65_BITS_40_TO_20_78_SRA_6___d179,
		 m_stg_6_rv[40:20] +
		 m_stg_6_rv_port0__read__65_BITS_61_TO_41_77_SRA_6___d181,
		 m_stg_6_rv[19:0] - 20'd2607 } ;
  assign IF_mode_AND_NOT_m_stg_7_rv_port0__read__92_BIT_ETC___d217 =
	     (mode && !m_stg_7_rv[40] || !mode && m_stg_7_rv[19]) ?
	       { m_stg_7_rv[61:41] +
		 m_stg_7_rv_port0__read__92_BITS_40_TO_20_05_SRA_7___d206,
		 m_stg_7_rv[40:20] -
		 m_stg_7_rv_port0__read__92_BITS_61_TO_41_04_SRA_7___d208,
		 m_stg_7_rv[19:0] + 20'd1304 } :
	       { m_stg_7_rv[61:41] -
		 m_stg_7_rv_port0__read__92_BITS_40_TO_20_05_SRA_7___d206,
		 m_stg_7_rv[40:20] +
		 m_stg_7_rv_port0__read__92_BITS_61_TO_41_04_SRA_7___d208,
		 m_stg_7_rv[19:0] - 20'd1304 } ;
  assign IF_mode_AND_NOT_m_stg_8_rv_port0__read__19_BIT_ETC___d244 =
	     (mode && !m_stg_8_rv[40] || !mode && m_stg_8_rv[19]) ?
	       { m_stg_8_rv[61:41] +
		 m_stg_8_rv_port0__read__19_BITS_40_TO_20_32_SRA_8___d233,
		 m_stg_8_rv[40:20] -
		 m_stg_8_rv_port0__read__19_BITS_61_TO_41_31_SRA_8___d235,
		 m_stg_8_rv[19:0] + 20'd652 } :
	       { m_stg_8_rv[61:41] -
		 m_stg_8_rv_port0__read__19_BITS_40_TO_20_32_SRA_8___d233,
		 m_stg_8_rv[40:20] +
		 m_stg_8_rv_port0__read__19_BITS_61_TO_41_31_SRA_8___d235,
		 m_stg_8_rv[19:0] - 20'd652 } ;
  assign IF_mode_AND_NOT_m_stg_9_rv_port0__read__46_BIT_ETC___d271 =
	     (mode && !m_stg_9_rv[40] || !mode && m_stg_9_rv[19]) ?
	       { m_stg_9_rv[61:41] +
		 m_stg_9_rv_port0__read__46_BITS_40_TO_20_59_SRA_9___d260,
		 m_stg_9_rv[40:20] -
		 m_stg_9_rv_port0__read__46_BITS_61_TO_41_58_SRA_9___d262,
		 m_stg_9_rv[19:0] + 20'd326 } :
	       { m_stg_9_rv[61:41] -
		 m_stg_9_rv_port0__read__46_BITS_40_TO_20_59_SRA_9___d260,
		 m_stg_9_rv[40:20] +
		 m_stg_9_rv_port0__read__46_BITS_61_TO_41_58_SRA_9___d262,
		 m_stg_9_rv[19:0] - 20'd326 } ;
  assign IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d538 =
	     mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d536 ?
	       -{ SEXT_request_put_BITS_31_TO_16_13___d514[16:0], 4'd0 } :
	       { SEXT_request_put_BITS_47_TO_32_09___d510[16:0], 4'd0 } ;
  assign IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d543 =
	     { IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d538,
	       mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d536 ?
		 SEXT_request_put_BITS_47_TO_32_09___d510[16:0] :
		 SEXT_request_put_BITS_31_TO_16_13___d514[16:0],
	       4'd0,
	       mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d536 ?
		 SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 -
		 20'd262144 :
		 SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 } ;
  assign IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d544 =
	     mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d524 ?
	       { SEXT_request_put_BITS_31_TO_16_13___d514[16:0],
		 4'd0,
		 -{ SEXT_request_put_BITS_47_TO_32_09___d510[16:0], 4'd0 },
		 SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 +
		 20'd262144 } :
	       IF_mode_AND_SEXT_request_put_BITS_47_TO_32_09__ETC___d543 ;
  assign SEXT_m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q9 =
	     { {4{m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q8[15]}},
	       m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q8 } ;
  assign SEXT_m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q6 =
	     { {4{m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q5[16]}},
	       m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q5 } ;
  assign SEXT_m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q3 =
	     { {4{m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q2[16]}},
	       m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q2 } ;
  assign SEXT_request_put_BITS_15_TO_02__q83 =
	     { {4{request_put_BITS_15_TO_0__q82[15]}},
	       request_put_BITS_15_TO_0__q82 } ;
  assign SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 =
	     { SEXT_request_put_BITS_15_TO_02__q83[15:0], 4'd0 } ;
  assign SEXT_request_put_BITS_31_TO_16_13___d514 =
	     { {5{request_put_BITS_31_TO_16__q81[15]}},
	       request_put_BITS_31_TO_16__q81 } ;
  assign SEXT_request_put_BITS_47_TO_32_09___d510 =
	     { {5{request_put_BITS_47_TO_32__q80[15]}},
	       request_put_BITS_47_TO_32__q80 } ;
  assign m_stg_0_rv_BITS_40_TO_20__q10 = m_stg_0_rv[40:20] ;
  assign m_stg_0_rv_BITS_61_TO_41__q15 = m_stg_0_rv[61:41] ;
  assign m_stg_0_rv_port0__read_BITS_40_TO_20_6_SRA_0___d17 =
	     m_stg_0_rv_BITS_40_TO_20__q10 ;
  assign m_stg_0_rv_port0__read_BITS_61_TO_41_5_SRA_0___d19 =
	     m_stg_0_rv_BITS_61_TO_41__q15 ;
  assign m_stg_10_rv_BITS_40_TO_208_BITS_20_TO_10__q49 =
	     m_stg_10_rv_BITS_40_TO_20__q48[20:10] ;
  assign m_stg_10_rv_BITS_40_TO_20__q48 = m_stg_10_rv[40:20] ;
  assign m_stg_10_rv_BITS_61_TO_410_BITS_20_TO_10__q51 =
	     m_stg_10_rv_BITS_61_TO_41__q50[20:10] ;
  assign m_stg_10_rv_BITS_61_TO_41__q50 = m_stg_10_rv[61:41] ;
  assign m_stg_10_rv_port0__read__73_BITS_40_TO_20_86_S_ETC___d287 =
	     { {10{m_stg_10_rv_BITS_40_TO_208_BITS_20_TO_10__q49[10]}},
	       m_stg_10_rv_BITS_40_TO_208_BITS_20_TO_10__q49 } ;
  assign m_stg_10_rv_port0__read__73_BITS_61_TO_41_85_S_ETC___d289 =
	     { {10{m_stg_10_rv_BITS_61_TO_410_BITS_20_TO_10__q51[10]}},
	       m_stg_10_rv_BITS_61_TO_410_BITS_20_TO_10__q51 } ;
  assign m_stg_11_rv_BITS_40_TO_202_BITS_20_TO_11__q53 =
	     m_stg_11_rv_BITS_40_TO_20__q52[20:11] ;
  assign m_stg_11_rv_BITS_40_TO_20__q52 = m_stg_11_rv[40:20] ;
  assign m_stg_11_rv_BITS_61_TO_414_BITS_20_TO_11__q55 =
	     m_stg_11_rv_BITS_61_TO_41__q54[20:11] ;
  assign m_stg_11_rv_BITS_61_TO_41__q54 = m_stg_11_rv[61:41] ;
  assign m_stg_11_rv_port0__read__00_BITS_40_TO_20_13_S_ETC___d314 =
	     { {11{m_stg_11_rv_BITS_40_TO_202_BITS_20_TO_11__q53[9]}},
	       m_stg_11_rv_BITS_40_TO_202_BITS_20_TO_11__q53 } ;
  assign m_stg_11_rv_port0__read__00_BITS_61_TO_41_12_S_ETC___d316 =
	     { {11{m_stg_11_rv_BITS_61_TO_414_BITS_20_TO_11__q55[9]}},
	       m_stg_11_rv_BITS_61_TO_414_BITS_20_TO_11__q55 } ;
  assign m_stg_12_rv_BITS_40_TO_206_BITS_20_TO_12__q57 =
	     m_stg_12_rv_BITS_40_TO_20__q56[20:12] ;
  assign m_stg_12_rv_BITS_40_TO_20__q56 = m_stg_12_rv[40:20] ;
  assign m_stg_12_rv_BITS_61_TO_418_BITS_20_TO_12__q59 =
	     m_stg_12_rv_BITS_61_TO_41__q58[20:12] ;
  assign m_stg_12_rv_BITS_61_TO_41__q58 = m_stg_12_rv[61:41] ;
  assign m_stg_12_rv_port0__read__27_BITS_40_TO_20_40_S_ETC___d341 =
	     { {12{m_stg_12_rv_BITS_40_TO_206_BITS_20_TO_12__q57[8]}},
	       m_stg_12_rv_BITS_40_TO_206_BITS_20_TO_12__q57 } ;
  assign m_stg_12_rv_port0__read__27_BITS_61_TO_41_39_S_ETC___d343 =
	     { {12{m_stg_12_rv_BITS_61_TO_418_BITS_20_TO_12__q59[8]}},
	       m_stg_12_rv_BITS_61_TO_418_BITS_20_TO_12__q59 } ;
  assign m_stg_13_rv_BITS_40_TO_200_BITS_20_TO_13__q61 =
	     m_stg_13_rv_BITS_40_TO_20__q60[20:13] ;
  assign m_stg_13_rv_BITS_40_TO_20__q60 = m_stg_13_rv[40:20] ;
  assign m_stg_13_rv_BITS_61_TO_412_BITS_20_TO_13__q63 =
	     m_stg_13_rv_BITS_61_TO_41__q62[20:13] ;
  assign m_stg_13_rv_BITS_61_TO_41__q62 = m_stg_13_rv[61:41] ;
  assign m_stg_13_rv_port0__read__54_BITS_40_TO_20_67_S_ETC___d368 =
	     { {13{m_stg_13_rv_BITS_40_TO_200_BITS_20_TO_13__q61[7]}},
	       m_stg_13_rv_BITS_40_TO_200_BITS_20_TO_13__q61 } ;
  assign m_stg_13_rv_port0__read__54_BITS_61_TO_41_66_S_ETC___d370 =
	     { {13{m_stg_13_rv_BITS_61_TO_412_BITS_20_TO_13__q63[7]}},
	       m_stg_13_rv_BITS_61_TO_412_BITS_20_TO_13__q63 } ;
  assign m_stg_14_rv_BITS_40_TO_204_BITS_20_TO_14__q65 =
	     m_stg_14_rv_BITS_40_TO_20__q64[20:14] ;
  assign m_stg_14_rv_BITS_40_TO_20__q64 = m_stg_14_rv[40:20] ;
  assign m_stg_14_rv_BITS_61_TO_416_BITS_20_TO_14__q67 =
	     m_stg_14_rv_BITS_61_TO_41__q66[20:14] ;
  assign m_stg_14_rv_BITS_61_TO_41__q66 = m_stg_14_rv[61:41] ;
  assign m_stg_14_rv_port0__read__81_BITS_40_TO_20_94_S_ETC___d395 =
	     { {14{m_stg_14_rv_BITS_40_TO_204_BITS_20_TO_14__q65[6]}},
	       m_stg_14_rv_BITS_40_TO_204_BITS_20_TO_14__q65 } ;
  assign m_stg_14_rv_port0__read__81_BITS_61_TO_41_93_S_ETC___d397 =
	     { {14{m_stg_14_rv_BITS_61_TO_416_BITS_20_TO_14__q67[6]}},
	       m_stg_14_rv_BITS_61_TO_416_BITS_20_TO_14__q67 } ;
  assign m_stg_15_rv_BITS_40_TO_208_BITS_20_TO_15__q69 =
	     m_stg_15_rv_BITS_40_TO_20__q68[20:15] ;
  assign m_stg_15_rv_BITS_40_TO_20__q68 = m_stg_15_rv[40:20] ;
  assign m_stg_15_rv_BITS_61_TO_410_BITS_20_TO_15__q71 =
	     m_stg_15_rv_BITS_61_TO_41__q70[20:15] ;
  assign m_stg_15_rv_BITS_61_TO_41__q70 = m_stg_15_rv[61:41] ;
  assign m_stg_15_rv_port0__read__08_BITS_40_TO_20_21_S_ETC___d422 =
	     { {15{m_stg_15_rv_BITS_40_TO_208_BITS_20_TO_15__q69[5]}},
	       m_stg_15_rv_BITS_40_TO_208_BITS_20_TO_15__q69 } ;
  assign m_stg_15_rv_port0__read__08_BITS_61_TO_41_20_S_ETC___d424 =
	     { {15{m_stg_15_rv_BITS_61_TO_410_BITS_20_TO_15__q71[5]}},
	       m_stg_15_rv_BITS_61_TO_410_BITS_20_TO_15__q71 } ;
  assign m_stg_16_rv_BITS_40_TO_202_BITS_20_TO_16__q73 =
	     m_stg_16_rv_BITS_40_TO_20__q72[20:16] ;
  assign m_stg_16_rv_BITS_40_TO_20__q72 = m_stg_16_rv[40:20] ;
  assign m_stg_16_rv_BITS_61_TO_414_BITS_20_TO_16__q75 =
	     m_stg_16_rv_BITS_61_TO_41__q74[20:16] ;
  assign m_stg_16_rv_BITS_61_TO_41__q74 = m_stg_16_rv[61:41] ;
  assign m_stg_16_rv_port0__read__35_BITS_40_TO_20_48_S_ETC___d449 =
	     { {16{m_stg_16_rv_BITS_40_TO_202_BITS_20_TO_16__q73[4]}},
	       m_stg_16_rv_BITS_40_TO_202_BITS_20_TO_16__q73 } ;
  assign m_stg_16_rv_port0__read__35_BITS_61_TO_41_47_S_ETC___d451 =
	     { {16{m_stg_16_rv_BITS_61_TO_414_BITS_20_TO_16__q75[4]}},
	       m_stg_16_rv_BITS_61_TO_414_BITS_20_TO_16__q75 } ;
  assign m_stg_17_rv_BITS_40_TO_206_BITS_20_TO_17__q77 =
	     m_stg_17_rv_BITS_40_TO_20__q76[20:17] ;
  assign m_stg_17_rv_BITS_40_TO_20__q76 = m_stg_17_rv[40:20] ;
  assign m_stg_17_rv_BITS_61_TO_418_BITS_20_TO_17__q79 =
	     m_stg_17_rv_BITS_61_TO_41__q78[20:17] ;
  assign m_stg_17_rv_BITS_61_TO_41__q78 = m_stg_17_rv[61:41] ;
  assign m_stg_17_rv_port0__read__62_BITS_40_TO_20_75_S_ETC___d476 =
	     { {17{m_stg_17_rv_BITS_40_TO_206_BITS_20_TO_17__q77[3]}},
	       m_stg_17_rv_BITS_40_TO_206_BITS_20_TO_17__q77 } ;
  assign m_stg_17_rv_port0__read__62_BITS_61_TO_41_74_S_ETC___d478 =
	     { {17{m_stg_17_rv_BITS_61_TO_418_BITS_20_TO_17__q79[3]}},
	       m_stg_17_rv_BITS_61_TO_418_BITS_20_TO_17__q79 } ;
  assign m_stg_19_rv_BITS_19_TO_0_BITS_19_TO_4__q8 =
	     m_stg_19_rv_BITS_19_TO_0__q7[19:4] ;
  assign m_stg_19_rv_BITS_19_TO_0__q7 = m_stg_19_rv[19:0] ;
  assign m_stg_19_rv_BITS_40_TO_20_BITS_20_TO_4__q5 =
	     m_stg_19_rv_BITS_40_TO_20__q4[20:4] ;
  assign m_stg_19_rv_BITS_40_TO_20__q4 = m_stg_19_rv[40:20] ;
  assign m_stg_19_rv_BITS_61_TO_41_BITS_20_TO_4__q2 =
	     m_stg_19_rv_BITS_61_TO_41__q1[20:4] ;
  assign m_stg_19_rv_BITS_61_TO_41__q1 = m_stg_19_rv[61:41] ;
  assign m_stg_1_rv_BITS_40_TO_201_BITS_20_TO_1__q12 =
	     m_stg_1_rv_BITS_40_TO_20__q11[20:1] ;
  assign m_stg_1_rv_BITS_40_TO_20__q11 = m_stg_1_rv[40:20] ;
  assign m_stg_1_rv_BITS_61_TO_413_BITS_20_TO_1__q14 =
	     m_stg_1_rv_BITS_61_TO_41__q13[20:1] ;
  assign m_stg_1_rv_BITS_61_TO_41__q13 = m_stg_1_rv[61:41] ;
  assign m_stg_1_rv_port0__read__0_BITS_40_TO_20_3_SRA_1___d44 =
	     { m_stg_1_rv_BITS_40_TO_201_BITS_20_TO_1__q12[19],
	       m_stg_1_rv_BITS_40_TO_201_BITS_20_TO_1__q12 } ;
  assign m_stg_1_rv_port0__read__0_BITS_61_TO_41_2_SRA_1___d46 =
	     { m_stg_1_rv_BITS_61_TO_413_BITS_20_TO_1__q14[19],
	       m_stg_1_rv_BITS_61_TO_413_BITS_20_TO_1__q14 } ;
  assign m_stg_2_rv_BITS_40_TO_206_BITS_20_TO_2__q17 =
	     m_stg_2_rv_BITS_40_TO_20__q16[20:2] ;
  assign m_stg_2_rv_BITS_40_TO_20__q16 = m_stg_2_rv[40:20] ;
  assign m_stg_2_rv_BITS_61_TO_418_BITS_20_TO_2__q19 =
	     m_stg_2_rv_BITS_61_TO_41__q18[20:2] ;
  assign m_stg_2_rv_BITS_61_TO_41__q18 = m_stg_2_rv[61:41] ;
  assign m_stg_2_rv_port0__read__7_BITS_40_TO_20_0_SRA_2___d71 =
	     { {2{m_stg_2_rv_BITS_40_TO_206_BITS_20_TO_2__q17[18]}},
	       m_stg_2_rv_BITS_40_TO_206_BITS_20_TO_2__q17 } ;
  assign m_stg_2_rv_port0__read__7_BITS_61_TO_41_9_SRA_2___d73 =
	     { {2{m_stg_2_rv_BITS_61_TO_418_BITS_20_TO_2__q19[18]}},
	       m_stg_2_rv_BITS_61_TO_418_BITS_20_TO_2__q19 } ;
  assign m_stg_3_rv_BITS_40_TO_200_BITS_20_TO_3__q21 =
	     m_stg_3_rv_BITS_40_TO_20__q20[20:3] ;
  assign m_stg_3_rv_BITS_40_TO_20__q20 = m_stg_3_rv[40:20] ;
  assign m_stg_3_rv_BITS_61_TO_412_BITS_20_TO_3__q23 =
	     m_stg_3_rv_BITS_61_TO_41__q22[20:3] ;
  assign m_stg_3_rv_BITS_61_TO_41__q22 = m_stg_3_rv[61:41] ;
  assign m_stg_3_rv_port0__read__4_BITS_40_TO_20_7_SRA_3___d98 =
	     { {3{m_stg_3_rv_BITS_40_TO_200_BITS_20_TO_3__q21[17]}},
	       m_stg_3_rv_BITS_40_TO_200_BITS_20_TO_3__q21 } ;
  assign m_stg_3_rv_port0__read__4_BITS_61_TO_41_6_SRA_3___d100 =
	     { {3{m_stg_3_rv_BITS_61_TO_412_BITS_20_TO_3__q23[17]}},
	       m_stg_3_rv_BITS_61_TO_412_BITS_20_TO_3__q23 } ;
  assign m_stg_4_rv_BITS_40_TO_204_BITS_20_TO_4__q25 =
	     m_stg_4_rv_BITS_40_TO_20__q24[20:4] ;
  assign m_stg_4_rv_BITS_40_TO_20__q24 = m_stg_4_rv[40:20] ;
  assign m_stg_4_rv_BITS_61_TO_416_BITS_20_TO_4__q27 =
	     m_stg_4_rv_BITS_61_TO_41__q26[20:4] ;
  assign m_stg_4_rv_BITS_61_TO_41__q26 = m_stg_4_rv[61:41] ;
  assign m_stg_4_rv_port0__read__11_BITS_40_TO_20_24_SRA_4___d125 =
	     { {4{m_stg_4_rv_BITS_40_TO_204_BITS_20_TO_4__q25[16]}},
	       m_stg_4_rv_BITS_40_TO_204_BITS_20_TO_4__q25 } ;
  assign m_stg_4_rv_port0__read__11_BITS_61_TO_41_23_SRA_4___d127 =
	     { {4{m_stg_4_rv_BITS_61_TO_416_BITS_20_TO_4__q27[16]}},
	       m_stg_4_rv_BITS_61_TO_416_BITS_20_TO_4__q27 } ;
  assign m_stg_5_rv_BITS_40_TO_208_BITS_20_TO_5__q29 =
	     m_stg_5_rv_BITS_40_TO_20__q28[20:5] ;
  assign m_stg_5_rv_BITS_40_TO_20__q28 = m_stg_5_rv[40:20] ;
  assign m_stg_5_rv_BITS_61_TO_410_BITS_20_TO_5__q31 =
	     m_stg_5_rv_BITS_61_TO_41__q30[20:5] ;
  assign m_stg_5_rv_BITS_61_TO_41__q30 = m_stg_5_rv[61:41] ;
  assign m_stg_5_rv_port0__read__38_BITS_40_TO_20_51_SRA_5___d152 =
	     { {5{m_stg_5_rv_BITS_40_TO_208_BITS_20_TO_5__q29[15]}},
	       m_stg_5_rv_BITS_40_TO_208_BITS_20_TO_5__q29 } ;
  assign m_stg_5_rv_port0__read__38_BITS_61_TO_41_50_SRA_5___d154 =
	     { {5{m_stg_5_rv_BITS_61_TO_410_BITS_20_TO_5__q31[15]}},
	       m_stg_5_rv_BITS_61_TO_410_BITS_20_TO_5__q31 } ;
  assign m_stg_6_rv_BITS_40_TO_202_BITS_20_TO_6__q33 =
	     m_stg_6_rv_BITS_40_TO_20__q32[20:6] ;
  assign m_stg_6_rv_BITS_40_TO_20__q32 = m_stg_6_rv[40:20] ;
  assign m_stg_6_rv_BITS_61_TO_414_BITS_20_TO_6__q35 =
	     m_stg_6_rv_BITS_61_TO_41__q34[20:6] ;
  assign m_stg_6_rv_BITS_61_TO_41__q34 = m_stg_6_rv[61:41] ;
  assign m_stg_6_rv_port0__read__65_BITS_40_TO_20_78_SRA_6___d179 =
	     { {6{m_stg_6_rv_BITS_40_TO_202_BITS_20_TO_6__q33[14]}},
	       m_stg_6_rv_BITS_40_TO_202_BITS_20_TO_6__q33 } ;
  assign m_stg_6_rv_port0__read__65_BITS_61_TO_41_77_SRA_6___d181 =
	     { {6{m_stg_6_rv_BITS_61_TO_414_BITS_20_TO_6__q35[14]}},
	       m_stg_6_rv_BITS_61_TO_414_BITS_20_TO_6__q35 } ;
  assign m_stg_7_rv_BITS_40_TO_206_BITS_20_TO_7__q37 =
	     m_stg_7_rv_BITS_40_TO_20__q36[20:7] ;
  assign m_stg_7_rv_BITS_40_TO_20__q36 = m_stg_7_rv[40:20] ;
  assign m_stg_7_rv_BITS_61_TO_418_BITS_20_TO_7__q39 =
	     m_stg_7_rv_BITS_61_TO_41__q38[20:7] ;
  assign m_stg_7_rv_BITS_61_TO_41__q38 = m_stg_7_rv[61:41] ;
  assign m_stg_7_rv_port0__read__92_BITS_40_TO_20_05_SRA_7___d206 =
	     { {7{m_stg_7_rv_BITS_40_TO_206_BITS_20_TO_7__q37[13]}},
	       m_stg_7_rv_BITS_40_TO_206_BITS_20_TO_7__q37 } ;
  assign m_stg_7_rv_port0__read__92_BITS_61_TO_41_04_SRA_7___d208 =
	     { {7{m_stg_7_rv_BITS_61_TO_418_BITS_20_TO_7__q39[13]}},
	       m_stg_7_rv_BITS_61_TO_418_BITS_20_TO_7__q39 } ;
  assign m_stg_8_rv_BITS_40_TO_200_BITS_20_TO_8__q41 =
	     m_stg_8_rv_BITS_40_TO_20__q40[20:8] ;
  assign m_stg_8_rv_BITS_40_TO_20__q40 = m_stg_8_rv[40:20] ;
  assign m_stg_8_rv_BITS_61_TO_412_BITS_20_TO_8__q43 =
	     m_stg_8_rv_BITS_61_TO_41__q42[20:8] ;
  assign m_stg_8_rv_BITS_61_TO_41__q42 = m_stg_8_rv[61:41] ;
  assign m_stg_8_rv_port0__read__19_BITS_40_TO_20_32_SRA_8___d233 =
	     { {8{m_stg_8_rv_BITS_40_TO_200_BITS_20_TO_8__q41[12]}},
	       m_stg_8_rv_BITS_40_TO_200_BITS_20_TO_8__q41 } ;
  assign m_stg_8_rv_port0__read__19_BITS_61_TO_41_31_SRA_8___d235 =
	     { {8{m_stg_8_rv_BITS_61_TO_412_BITS_20_TO_8__q43[12]}},
	       m_stg_8_rv_BITS_61_TO_412_BITS_20_TO_8__q43 } ;
  assign m_stg_9_rv_BITS_40_TO_204_BITS_20_TO_9__q45 =
	     m_stg_9_rv_BITS_40_TO_20__q44[20:9] ;
  assign m_stg_9_rv_BITS_40_TO_20__q44 = m_stg_9_rv[40:20] ;
  assign m_stg_9_rv_BITS_61_TO_416_BITS_20_TO_9__q47 =
	     m_stg_9_rv_BITS_61_TO_41__q46[20:9] ;
  assign m_stg_9_rv_BITS_61_TO_41__q46 = m_stg_9_rv[61:41] ;
  assign m_stg_9_rv_port0__read__46_BITS_40_TO_20_59_SRA_9___d260 =
	     { {9{m_stg_9_rv_BITS_40_TO_204_BITS_20_TO_9__q45[11]}},
	       m_stg_9_rv_BITS_40_TO_204_BITS_20_TO_9__q45 } ;
  assign m_stg_9_rv_port0__read__46_BITS_61_TO_41_58_SRA_9___d262 =
	     { {9{m_stg_9_rv_BITS_61_TO_416_BITS_20_TO_9__q47[11]}},
	       m_stg_9_rv_BITS_61_TO_416_BITS_20_TO_9__q47 } ;
  assign mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d524 =
	     mode && SEXT_request_put_BITS_47_TO_32_09___d510[16] &&
	     !SEXT_request_put_BITS_31_TO_16_13___d514[16] ||
	     !mode &&
	     (SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 ^
	      20'h80000) <
	     20'd262144 ;
  assign mode_AND_SEXT_request_put_BITS_47_TO_32_09_10__ETC___d536 =
	     mode && SEXT_request_put_BITS_47_TO_32_09___d510[16] &&
	     SEXT_request_put_BITS_31_TO_16_13___d514[16] ||
	     !mode &&
	     (SEXT_request_put_BITS_15_TO_0_18_19_BITS_15_TO_ETC___d521 ^
	      20'h80000) >=
	     20'd786432 ;
  assign request_put_BITS_15_TO_0__q82 = request_put[15:0] ;
  assign request_put_BITS_31_TO_16__q81 = request_put[31:16] ;
  assign request_put_BITS_47_TO_32__q80 = request_put[47:32] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        m_stg_0_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_10_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_11_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_12_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_13_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_14_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_15_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_16_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_17_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_18_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_19_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_1_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_2_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_3_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_4_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_5_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_6_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_7_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_8_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
	m_stg_9_rv <= `BSV_ASSIGNMENT_DELAY 63'h2AAAAAAAAAAAAAAA;
      end
    else
      begin
        if (m_stg_0_rv$EN)
	  m_stg_0_rv <= `BSV_ASSIGNMENT_DELAY m_stg_0_rv$D_IN;
	if (m_stg_10_rv$EN)
	  m_stg_10_rv <= `BSV_ASSIGNMENT_DELAY m_stg_10_rv$D_IN;
	if (m_stg_11_rv$EN)
	  m_stg_11_rv <= `BSV_ASSIGNMENT_DELAY m_stg_11_rv$D_IN;
	if (m_stg_12_rv$EN)
	  m_stg_12_rv <= `BSV_ASSIGNMENT_DELAY m_stg_12_rv$D_IN;
	if (m_stg_13_rv$EN)
	  m_stg_13_rv <= `BSV_ASSIGNMENT_DELAY m_stg_13_rv$D_IN;
	if (m_stg_14_rv$EN)
	  m_stg_14_rv <= `BSV_ASSIGNMENT_DELAY m_stg_14_rv$D_IN;
	if (m_stg_15_rv$EN)
	  m_stg_15_rv <= `BSV_ASSIGNMENT_DELAY m_stg_15_rv$D_IN;
	if (m_stg_16_rv$EN)
	  m_stg_16_rv <= `BSV_ASSIGNMENT_DELAY m_stg_16_rv$D_IN;
	if (m_stg_17_rv$EN)
	  m_stg_17_rv <= `BSV_ASSIGNMENT_DELAY m_stg_17_rv$D_IN;
	if (m_stg_18_rv$EN)
	  m_stg_18_rv <= `BSV_ASSIGNMENT_DELAY m_stg_18_rv$D_IN;
	if (m_stg_19_rv$EN)
	  m_stg_19_rv <= `BSV_ASSIGNMENT_DELAY m_stg_19_rv$D_IN;
	if (m_stg_1_rv$EN)
	  m_stg_1_rv <= `BSV_ASSIGNMENT_DELAY m_stg_1_rv$D_IN;
	if (m_stg_2_rv$EN)
	  m_stg_2_rv <= `BSV_ASSIGNMENT_DELAY m_stg_2_rv$D_IN;
	if (m_stg_3_rv$EN)
	  m_stg_3_rv <= `BSV_ASSIGNMENT_DELAY m_stg_3_rv$D_IN;
	if (m_stg_4_rv$EN)
	  m_stg_4_rv <= `BSV_ASSIGNMENT_DELAY m_stg_4_rv$D_IN;
	if (m_stg_5_rv$EN)
	  m_stg_5_rv <= `BSV_ASSIGNMENT_DELAY m_stg_5_rv$D_IN;
	if (m_stg_6_rv$EN)
	  m_stg_6_rv <= `BSV_ASSIGNMENT_DELAY m_stg_6_rv$D_IN;
	if (m_stg_7_rv$EN)
	  m_stg_7_rv <= `BSV_ASSIGNMENT_DELAY m_stg_7_rv$D_IN;
	if (m_stg_8_rv$EN)
	  m_stg_8_rv <= `BSV_ASSIGNMENT_DELAY m_stg_8_rv$D_IN;
	if (m_stg_9_rv$EN)
	  m_stg_9_rv <= `BSV_ASSIGNMENT_DELAY m_stg_9_rv$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    m_stg_0_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_10_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_11_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_12_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_13_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_14_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_15_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_16_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_17_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_18_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_19_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_1_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_2_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_3_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_4_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_5_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_6_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_7_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_8_rv = 63'h2AAAAAAAAAAAAAAA;
    m_stg_9_rv = 63'h2AAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkCORDIC_16

