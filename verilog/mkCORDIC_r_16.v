//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd50140)
//
// On Sat Dec 18 18:10:43 CET 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_request_put                O     1
// response_get                   O    50
// RDY_response_get               O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// request_put                    I    48
// EN_request_put                 I     1
// EN_response_get                I     1
//
// Combinational paths from inputs to outputs:
//   EN_response_get -> RDY_request_put
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCORDIC_r_16(CLK,
		     RST_N,

		     request_put,
		     EN_request_put,
		     RDY_request_put,

		     EN_response_get,
		     response_get,
		     RDY_response_get);
  input  CLK;
  input  RST_N;

  // action method request_put
  input  [47 : 0] request_put;
  input  EN_request_put;
  output RDY_request_put;

  // actionvalue method response_get
  input  EN_response_get;
  output [49 : 0] response_get;
  output RDY_response_get;

  // signals for module outputs
  wire [49 : 0] response_get;
  wire RDY_request_put, RDY_response_get;

  // inlined wires
  wire [66 : 0] m_stg_0_rv$port0__write_1,
		m_stg_0_rv$port1__read,
		m_stg_0_rv$port1__write_1,
		m_stg_0_rv$port2__read,
		m_stg_10_rv$port1__read,
		m_stg_10_rv$port1__write_1,
		m_stg_10_rv$port2__read,
		m_stg_11_rv$port1__read,
		m_stg_11_rv$port1__write_1,
		m_stg_11_rv$port2__read,
		m_stg_12_rv$port1__read,
		m_stg_12_rv$port1__write_1,
		m_stg_12_rv$port2__read,
		m_stg_13_rv$port1__read,
		m_stg_13_rv$port1__write_1,
		m_stg_13_rv$port2__read,
		m_stg_14_rv$port1__read,
		m_stg_14_rv$port1__write_1,
		m_stg_14_rv$port2__read,
		m_stg_15_rv$port1__read,
		m_stg_15_rv$port1__write_1,
		m_stg_15_rv$port2__read,
		m_stg_16_rv$port1__read,
		m_stg_16_rv$port1__write_1,
		m_stg_16_rv$port2__read,
		m_stg_17_rv$port1__read,
		m_stg_17_rv$port1__write_1,
		m_stg_17_rv$port2__read,
		m_stg_18_rv$port1__read,
		m_stg_18_rv$port1__write_1,
		m_stg_18_rv$port2__read,
		m_stg_1_rv$port1__read,
		m_stg_1_rv$port1__write_1,
		m_stg_1_rv$port2__read,
		m_stg_2_rv$port1__read,
		m_stg_2_rv$port1__write_1,
		m_stg_2_rv$port2__read,
		m_stg_3_rv$port1__read,
		m_stg_3_rv$port1__write_1,
		m_stg_3_rv$port2__read,
		m_stg_4_rv$port1__read,
		m_stg_4_rv$port1__write_1,
		m_stg_4_rv$port2__read,
		m_stg_5_rv$port1__read,
		m_stg_5_rv$port1__write_1,
		m_stg_5_rv$port2__read,
		m_stg_6_rv$port1__read,
		m_stg_6_rv$port1__write_1,
		m_stg_6_rv$port2__read,
		m_stg_7_rv$port1__read,
		m_stg_7_rv$port1__write_1,
		m_stg_7_rv$port2__read,
		m_stg_8_rv$port1__read,
		m_stg_8_rv$port1__write_1,
		m_stg_8_rv$port2__read,
		m_stg_9_rv$port1__read,
		m_stg_9_rv$port1__write_1,
		m_stg_9_rv$port2__read;
  wire m_stg_0_rv$EN_port0__write,
       m_stg_10_rv$EN_port0__write,
       m_stg_10_rv$EN_port1__write,
       m_stg_11_rv$EN_port0__write,
       m_stg_11_rv$EN_port1__write,
       m_stg_12_rv$EN_port0__write,
       m_stg_12_rv$EN_port1__write,
       m_stg_13_rv$EN_port0__write,
       m_stg_13_rv$EN_port1__write,
       m_stg_14_rv$EN_port0__write,
       m_stg_14_rv$EN_port1__write,
       m_stg_15_rv$EN_port0__write,
       m_stg_15_rv$EN_port1__write,
       m_stg_16_rv$EN_port0__write,
       m_stg_16_rv$EN_port1__write,
       m_stg_17_rv$EN_port0__write,
       m_stg_17_rv$EN_port1__write,
       m_stg_18_rv$EN_port1__write,
       m_stg_1_rv$EN_port0__write,
       m_stg_1_rv$EN_port1__write,
       m_stg_2_rv$EN_port0__write,
       m_stg_2_rv$EN_port1__write,
       m_stg_3_rv$EN_port0__write,
       m_stg_3_rv$EN_port1__write,
       m_stg_4_rv$EN_port0__write,
       m_stg_4_rv$EN_port1__write,
       m_stg_5_rv$EN_port0__write,
       m_stg_5_rv$EN_port1__write,
       m_stg_6_rv$EN_port0__write,
       m_stg_6_rv$EN_port1__write,
       m_stg_7_rv$EN_port0__write,
       m_stg_7_rv$EN_port1__write,
       m_stg_8_rv$EN_port0__write,
       m_stg_8_rv$EN_port1__write,
       m_stg_9_rv$EN_port0__write,
       m_stg_9_rv$EN_port1__write;

  // register m_stg_0_rv
  reg [66 : 0] m_stg_0_rv;
  wire [66 : 0] m_stg_0_rv$D_IN;
  wire m_stg_0_rv$EN;

  // register m_stg_10_rv
  reg [66 : 0] m_stg_10_rv;
  wire [66 : 0] m_stg_10_rv$D_IN;
  wire m_stg_10_rv$EN;

  // register m_stg_11_rv
  reg [66 : 0] m_stg_11_rv;
  wire [66 : 0] m_stg_11_rv$D_IN;
  wire m_stg_11_rv$EN;

  // register m_stg_12_rv
  reg [66 : 0] m_stg_12_rv;
  wire [66 : 0] m_stg_12_rv$D_IN;
  wire m_stg_12_rv$EN;

  // register m_stg_13_rv
  reg [66 : 0] m_stg_13_rv;
  wire [66 : 0] m_stg_13_rv$D_IN;
  wire m_stg_13_rv$EN;

  // register m_stg_14_rv
  reg [66 : 0] m_stg_14_rv;
  wire [66 : 0] m_stg_14_rv$D_IN;
  wire m_stg_14_rv$EN;

  // register m_stg_15_rv
  reg [66 : 0] m_stg_15_rv;
  wire [66 : 0] m_stg_15_rv$D_IN;
  wire m_stg_15_rv$EN;

  // register m_stg_16_rv
  reg [66 : 0] m_stg_16_rv;
  wire [66 : 0] m_stg_16_rv$D_IN;
  wire m_stg_16_rv$EN;

  // register m_stg_17_rv
  reg [66 : 0] m_stg_17_rv;
  wire [66 : 0] m_stg_17_rv$D_IN;
  wire m_stg_17_rv$EN;

  // register m_stg_18_rv
  reg [66 : 0] m_stg_18_rv;
  wire [66 : 0] m_stg_18_rv$D_IN;
  wire m_stg_18_rv$EN;

  // register m_stg_1_rv
  reg [66 : 0] m_stg_1_rv;
  wire [66 : 0] m_stg_1_rv$D_IN;
  wire m_stg_1_rv$EN;

  // register m_stg_2_rv
  reg [66 : 0] m_stg_2_rv;
  wire [66 : 0] m_stg_2_rv$D_IN;
  wire m_stg_2_rv$EN;

  // register m_stg_3_rv
  reg [66 : 0] m_stg_3_rv;
  wire [66 : 0] m_stg_3_rv$D_IN;
  wire m_stg_3_rv$EN;

  // register m_stg_4_rv
  reg [66 : 0] m_stg_4_rv;
  wire [66 : 0] m_stg_4_rv$D_IN;
  wire m_stg_4_rv$EN;

  // register m_stg_5_rv
  reg [66 : 0] m_stg_5_rv;
  wire [66 : 0] m_stg_5_rv$D_IN;
  wire m_stg_5_rv$EN;

  // register m_stg_6_rv
  reg [66 : 0] m_stg_6_rv;
  wire [66 : 0] m_stg_6_rv$D_IN;
  wire m_stg_6_rv$EN;

  // register m_stg_7_rv
  reg [66 : 0] m_stg_7_rv;
  wire [66 : 0] m_stg_7_rv$D_IN;
  wire m_stg_7_rv$EN;

  // register m_stg_8_rv
  reg [66 : 0] m_stg_8_rv;
  wire [66 : 0] m_stg_8_rv$D_IN;
  wire m_stg_8_rv$EN;

  // register m_stg_9_rv
  reg [66 : 0] m_stg_9_rv;
  wire [66 : 0] m_stg_9_rv$D_IN;
  wire m_stg_9_rv$EN;

  // remaining internal signals
  wire [65 : 0] IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d419,
		IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d420,
		IF_m_stg_0_rv_port0__read_BIT_19_THEN_m_stg_0__ETC___d22,
		IF_m_stg_10_rv_port0__read__22_BIT_19_28_THEN__ETC___d242,
		IF_m_stg_11_rv_port0__read__44_BIT_19_50_THEN__ETC___d264,
		IF_m_stg_12_rv_port0__read__66_BIT_19_72_THEN__ETC___d286,
		IF_m_stg_13_rv_port0__read__88_BIT_19_94_THEN__ETC___d308,
		IF_m_stg_14_rv_port0__read__10_BIT_19_16_THEN__ETC___d330,
		IF_m_stg_15_rv_port0__read__32_BIT_19_38_THEN__ETC___d352,
		IF_m_stg_16_rv_port0__read__54_BIT_19_60_THEN__ETC___d374,
		IF_m_stg_1_rv_port0__read__4_BIT_19_0_THEN_m_s_ETC___d44,
		IF_m_stg_2_rv_port0__read__6_BIT_19_2_THEN_m_s_ETC___d66,
		IF_m_stg_3_rv_port0__read__8_BIT_19_4_THEN_m_s_ETC___d88,
		IF_m_stg_4_rv_port0__read__0_BIT_19_6_THEN_m_s_ETC___d110,
		IF_m_stg_5_rv_port0__read__12_BIT_19_18_THEN_m_ETC___d132,
		IF_m_stg_6_rv_port0__read__34_BIT_19_40_THEN_m_ETC___d154,
		IF_m_stg_7_rv_port0__read__56_BIT_19_62_THEN_m_ETC___d176,
		IF_m_stg_8_rv_port0__read__78_BIT_19_84_THEN_m_ETC___d198,
		IF_m_stg_9_rv_port0__read__00_BIT_19_06_THEN_m_ETC___d220;
  wire [22 : 0] SEXT_m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q6,
		SEXT_m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q3,
		SEXT_request_put_BITS_31_TO_160__q81,
		SEXT_request_put_BITS_47_TO_328__q79,
		m_stg_0_rv_BITS_42_TO_20__q10,
		m_stg_0_rv_BITS_65_TO_43__q15,
		m_stg_0_rv_port0__read_BITS_42_TO_20_0_SRA_0___d11,
		m_stg_0_rv_port0__read_BITS_65_TO_43_SRA_0___d13,
		m_stg_10_rv_BITS_42_TO_20__q48,
		m_stg_10_rv_BITS_65_TO_43__q50,
		m_stg_10_rv_port0__read__22_BITS_42_TO_20_30_S_ETC___d231,
		m_stg_10_rv_port0__read__22_BITS_65_TO_43_29_S_ETC___d233,
		m_stg_11_rv_BITS_42_TO_20__q52,
		m_stg_11_rv_BITS_65_TO_43__q54,
		m_stg_11_rv_port0__read__44_BITS_42_TO_20_52_S_ETC___d253,
		m_stg_11_rv_port0__read__44_BITS_65_TO_43_51_S_ETC___d255,
		m_stg_12_rv_BITS_42_TO_20__q56,
		m_stg_12_rv_BITS_65_TO_43__q58,
		m_stg_12_rv_port0__read__66_BITS_42_TO_20_74_S_ETC___d275,
		m_stg_12_rv_port0__read__66_BITS_65_TO_43_73_S_ETC___d277,
		m_stg_13_rv_BITS_42_TO_20__q60,
		m_stg_13_rv_BITS_65_TO_43__q62,
		m_stg_13_rv_port0__read__88_BITS_42_TO_20_96_S_ETC___d297,
		m_stg_13_rv_port0__read__88_BITS_65_TO_43_95_S_ETC___d299,
		m_stg_14_rv_BITS_42_TO_20__q64,
		m_stg_14_rv_BITS_65_TO_43__q66,
		m_stg_14_rv_port0__read__10_BITS_42_TO_20_18_S_ETC___d319,
		m_stg_14_rv_port0__read__10_BITS_65_TO_43_17_S_ETC___d321,
		m_stg_15_rv_BITS_42_TO_20__q68,
		m_stg_15_rv_BITS_65_TO_43__q70,
		m_stg_15_rv_port0__read__32_BITS_42_TO_20_40_S_ETC___d341,
		m_stg_15_rv_port0__read__32_BITS_65_TO_43_39_S_ETC___d343,
		m_stg_16_rv_BITS_42_TO_20__q72,
		m_stg_16_rv_BITS_65_TO_43__q74,
		m_stg_16_rv_port0__read__54_BITS_42_TO_20_62_S_ETC___d363,
		m_stg_16_rv_port0__read__54_BITS_65_TO_43_61_S_ETC___d365,
		m_stg_18_rv_BITS_42_TO_20__q4,
		m_stg_18_rv_BITS_65_TO_43__q1,
		m_stg_1_rv_BITS_42_TO_20__q13,
		m_stg_1_rv_BITS_65_TO_43__q11,
		m_stg_1_rv_port0__read__4_BITS_42_TO_20_2_SRA_1___d33,
		m_stg_1_rv_port0__read__4_BITS_65_TO_43_1_SRA_1___d35,
		m_stg_2_rv_BITS_42_TO_20__q16,
		m_stg_2_rv_BITS_65_TO_43__q18,
		m_stg_2_rv_port0__read__6_BITS_42_TO_20_4_SRA_2___d55,
		m_stg_2_rv_port0__read__6_BITS_65_TO_43_3_SRA_2___d57,
		m_stg_3_rv_BITS_42_TO_20__q20,
		m_stg_3_rv_BITS_65_TO_43__q22,
		m_stg_3_rv_port0__read__8_BITS_42_TO_20_6_SRA_3___d77,
		m_stg_3_rv_port0__read__8_BITS_65_TO_43_5_SRA_3___d79,
		m_stg_4_rv_BITS_42_TO_20__q24,
		m_stg_4_rv_BITS_65_TO_43__q26,
		m_stg_4_rv_port0__read__0_BITS_42_TO_20_8_SRA_4___d99,
		m_stg_4_rv_port0__read__0_BITS_65_TO_43_7_SRA_4___d101,
		m_stg_5_rv_BITS_42_TO_20__q28,
		m_stg_5_rv_BITS_65_TO_43__q30,
		m_stg_5_rv_port0__read__12_BITS_42_TO_20_20_SRA_5___d121,
		m_stg_5_rv_port0__read__12_BITS_65_TO_43_19_SRA_5___d123,
		m_stg_6_rv_BITS_42_TO_20__q32,
		m_stg_6_rv_BITS_65_TO_43__q34,
		m_stg_6_rv_port0__read__34_BITS_42_TO_20_42_SRA_6___d143,
		m_stg_6_rv_port0__read__34_BITS_65_TO_43_41_SRA_6___d145,
		m_stg_7_rv_BITS_42_TO_20__q36,
		m_stg_7_rv_BITS_65_TO_43__q38,
		m_stg_7_rv_port0__read__56_BITS_42_TO_20_64_SRA_7___d165,
		m_stg_7_rv_port0__read__56_BITS_65_TO_43_63_SRA_7___d167,
		m_stg_8_rv_BITS_42_TO_20__q40,
		m_stg_8_rv_BITS_65_TO_43__q42,
		m_stg_8_rv_port0__read__78_BITS_42_TO_20_86_SRA_8___d187,
		m_stg_8_rv_port0__read__78_BITS_65_TO_43_85_SRA_8___d189,
		m_stg_9_rv_BITS_42_TO_20__q44,
		m_stg_9_rv_BITS_65_TO_43__q46,
		m_stg_9_rv_port0__read__00_BITS_42_TO_20_08_SRA_9___d209,
		m_stg_9_rv_port0__read__00_BITS_65_TO_43_07_SRA_9___d211;
  wire [21 : 0] m_stg_1_rv_BITS_42_TO_203_BITS_22_TO_1__q14,
		m_stg_1_rv_BITS_65_TO_431_BITS_22_TO_1__q12;
  wire [20 : 0] m_stg_2_rv_BITS_42_TO_206_BITS_22_TO_2__q17,
		m_stg_2_rv_BITS_65_TO_438_BITS_22_TO_2__q19;
  wire [19 : 0] SEXT_m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q9,
		SEXT_request_put_BITS_15_TO_06__q77,
		SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399,
		m_stg_18_rv_BITS_19_TO_0__q7,
		m_stg_3_rv_BITS_42_TO_200_BITS_22_TO_3__q21,
		m_stg_3_rv_BITS_65_TO_432_BITS_22_TO_3__q23;
  wire [18 : 0] m_stg_4_rv_BITS_42_TO_204_BITS_22_TO_4__q25,
		m_stg_4_rv_BITS_65_TO_436_BITS_22_TO_4__q27;
  wire [17 : 0] m_stg_5_rv_BITS_42_TO_208_BITS_22_TO_5__q29,
		m_stg_5_rv_BITS_65_TO_430_BITS_22_TO_5__q31;
  wire [16 : 0] m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q5,
		m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q2,
		m_stg_6_rv_BITS_42_TO_202_BITS_22_TO_6__q33,
		m_stg_6_rv_BITS_65_TO_434_BITS_22_TO_6__q35;
  wire [15 : 0] m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q8,
		m_stg_7_rv_BITS_42_TO_206_BITS_22_TO_7__q37,
		m_stg_7_rv_BITS_65_TO_438_BITS_22_TO_7__q39,
		request_put_BITS_15_TO_0__q76,
		request_put_BITS_31_TO_16__q80,
		request_put_BITS_47_TO_32__q78;
  wire [14 : 0] m_stg_8_rv_BITS_42_TO_200_BITS_22_TO_8__q41,
		m_stg_8_rv_BITS_65_TO_432_BITS_22_TO_8__q43;
  wire [13 : 0] m_stg_9_rv_BITS_42_TO_204_BITS_22_TO_9__q45,
		m_stg_9_rv_BITS_65_TO_436_BITS_22_TO_9__q47;
  wire [12 : 0] m_stg_10_rv_BITS_42_TO_208_BITS_22_TO_10__q49,
		m_stg_10_rv_BITS_65_TO_430_BITS_22_TO_10__q51;
  wire [11 : 0] m_stg_11_rv_BITS_42_TO_202_BITS_22_TO_11__q53,
		m_stg_11_rv_BITS_65_TO_434_BITS_22_TO_11__q55;
  wire [10 : 0] m_stg_12_rv_BITS_42_TO_206_BITS_22_TO_12__q57,
		m_stg_12_rv_BITS_65_TO_438_BITS_22_TO_12__q59;
  wire [9 : 0] m_stg_13_rv_BITS_42_TO_200_BITS_22_TO_13__q61,
	       m_stg_13_rv_BITS_65_TO_432_BITS_22_TO_13__q63;
  wire [8 : 0] m_stg_14_rv_BITS_42_TO_204_BITS_22_TO_14__q65,
	       m_stg_14_rv_BITS_65_TO_436_BITS_22_TO_14__q67;
  wire [7 : 0] m_stg_15_rv_BITS_42_TO_208_BITS_22_TO_15__q69,
	       m_stg_15_rv_BITS_65_TO_430_BITS_22_TO_15__q71;
  wire [6 : 0] m_stg_16_rv_BITS_42_TO_202_BITS_22_TO_16__q73,
	       m_stg_16_rv_BITS_65_TO_434_BITS_22_TO_16__q75;
  wire SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d412;

  // action method request_put
  assign RDY_request_put = !m_stg_0_rv$port1__read[66] ;

  // actionvalue method response_get
  assign response_get =
	     { SEXT_m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q3[16:0],
	       SEXT_m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q6[16:0],
	       SEXT_m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q9[15:0] } ;
  assign RDY_response_get = m_stg_18_rv[66] ;

  // inlined wires
  assign m_stg_0_rv$EN_port0__write =
	     m_stg_0_rv[66] && !m_stg_1_rv$port1__read[66] ;
  assign m_stg_0_rv$port0__write_1 =
	     { 1'd0,
	       66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign m_stg_0_rv$port1__read =
	     m_stg_0_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_0_rv ;
  assign m_stg_0_rv$port1__write_1 =
	     { 1'd1,
	       IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d420 } ;
  assign m_stg_0_rv$port2__read =
	     EN_request_put ?
	       m_stg_0_rv$port1__write_1 :
	       m_stg_0_rv$port1__read ;
  assign m_stg_1_rv$EN_port0__write =
	     m_stg_1_rv[66] && !m_stg_2_rv$port1__read[66] ;
  assign m_stg_1_rv$port1__read =
	     m_stg_1_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_1_rv ;
  assign m_stg_1_rv$EN_port1__write =
	     m_stg_0_rv[66] && !m_stg_1_rv$port1__read[66] ;
  assign m_stg_1_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_0_rv_port0__read_BIT_19_THEN_m_stg_0__ETC___d22 } ;
  assign m_stg_1_rv$port2__read =
	     m_stg_1_rv$EN_port1__write ?
	       m_stg_1_rv$port1__write_1 :
	       m_stg_1_rv$port1__read ;
  assign m_stg_2_rv$EN_port0__write =
	     m_stg_2_rv[66] && !m_stg_3_rv$port1__read[66] ;
  assign m_stg_2_rv$port1__read =
	     m_stg_2_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_2_rv ;
  assign m_stg_2_rv$EN_port1__write =
	     m_stg_1_rv[66] && !m_stg_2_rv$port1__read[66] ;
  assign m_stg_2_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_1_rv_port0__read__4_BIT_19_0_THEN_m_s_ETC___d44 } ;
  assign m_stg_2_rv$port2__read =
	     m_stg_2_rv$EN_port1__write ?
	       m_stg_2_rv$port1__write_1 :
	       m_stg_2_rv$port1__read ;
  assign m_stg_3_rv$EN_port0__write =
	     m_stg_3_rv[66] && !m_stg_4_rv$port1__read[66] ;
  assign m_stg_3_rv$port1__read =
	     m_stg_3_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_3_rv ;
  assign m_stg_3_rv$EN_port1__write =
	     m_stg_2_rv[66] && !m_stg_3_rv$port1__read[66] ;
  assign m_stg_3_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_2_rv_port0__read__6_BIT_19_2_THEN_m_s_ETC___d66 } ;
  assign m_stg_3_rv$port2__read =
	     m_stg_3_rv$EN_port1__write ?
	       m_stg_3_rv$port1__write_1 :
	       m_stg_3_rv$port1__read ;
  assign m_stg_4_rv$EN_port0__write =
	     m_stg_4_rv[66] && !m_stg_5_rv$port1__read[66] ;
  assign m_stg_4_rv$port1__read =
	     m_stg_4_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_4_rv ;
  assign m_stg_4_rv$EN_port1__write =
	     m_stg_3_rv[66] && !m_stg_4_rv$port1__read[66] ;
  assign m_stg_4_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_3_rv_port0__read__8_BIT_19_4_THEN_m_s_ETC___d88 } ;
  assign m_stg_4_rv$port2__read =
	     m_stg_4_rv$EN_port1__write ?
	       m_stg_4_rv$port1__write_1 :
	       m_stg_4_rv$port1__read ;
  assign m_stg_5_rv$EN_port0__write =
	     m_stg_5_rv[66] && !m_stg_6_rv$port1__read[66] ;
  assign m_stg_5_rv$port1__read =
	     m_stg_5_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_5_rv ;
  assign m_stg_5_rv$EN_port1__write =
	     m_stg_4_rv[66] && !m_stg_5_rv$port1__read[66] ;
  assign m_stg_5_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_4_rv_port0__read__0_BIT_19_6_THEN_m_s_ETC___d110 } ;
  assign m_stg_5_rv$port2__read =
	     m_stg_5_rv$EN_port1__write ?
	       m_stg_5_rv$port1__write_1 :
	       m_stg_5_rv$port1__read ;
  assign m_stg_6_rv$EN_port0__write =
	     m_stg_6_rv[66] && !m_stg_7_rv$port1__read[66] ;
  assign m_stg_6_rv$port1__read =
	     m_stg_6_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_6_rv ;
  assign m_stg_6_rv$EN_port1__write =
	     m_stg_5_rv[66] && !m_stg_6_rv$port1__read[66] ;
  assign m_stg_6_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_5_rv_port0__read__12_BIT_19_18_THEN_m_ETC___d132 } ;
  assign m_stg_6_rv$port2__read =
	     m_stg_6_rv$EN_port1__write ?
	       m_stg_6_rv$port1__write_1 :
	       m_stg_6_rv$port1__read ;
  assign m_stg_7_rv$EN_port0__write =
	     m_stg_7_rv[66] && !m_stg_8_rv$port1__read[66] ;
  assign m_stg_7_rv$port1__read =
	     m_stg_7_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_7_rv ;
  assign m_stg_7_rv$EN_port1__write =
	     m_stg_6_rv[66] && !m_stg_7_rv$port1__read[66] ;
  assign m_stg_7_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_6_rv_port0__read__34_BIT_19_40_THEN_m_ETC___d154 } ;
  assign m_stg_7_rv$port2__read =
	     m_stg_7_rv$EN_port1__write ?
	       m_stg_7_rv$port1__write_1 :
	       m_stg_7_rv$port1__read ;
  assign m_stg_8_rv$EN_port0__write =
	     m_stg_8_rv[66] && !m_stg_9_rv$port1__read[66] ;
  assign m_stg_8_rv$port1__read =
	     m_stg_8_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_8_rv ;
  assign m_stg_8_rv$EN_port1__write =
	     m_stg_7_rv[66] && !m_stg_8_rv$port1__read[66] ;
  assign m_stg_8_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_7_rv_port0__read__56_BIT_19_62_THEN_m_ETC___d176 } ;
  assign m_stg_8_rv$port2__read =
	     m_stg_8_rv$EN_port1__write ?
	       m_stg_8_rv$port1__write_1 :
	       m_stg_8_rv$port1__read ;
  assign m_stg_9_rv$EN_port0__write =
	     m_stg_9_rv[66] && !m_stg_10_rv$port1__read[66] ;
  assign m_stg_9_rv$port1__read =
	     m_stg_9_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_9_rv ;
  assign m_stg_9_rv$EN_port1__write =
	     m_stg_8_rv[66] && !m_stg_9_rv$port1__read[66] ;
  assign m_stg_9_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_8_rv_port0__read__78_BIT_19_84_THEN_m_ETC___d198 } ;
  assign m_stg_9_rv$port2__read =
	     m_stg_9_rv$EN_port1__write ?
	       m_stg_9_rv$port1__write_1 :
	       m_stg_9_rv$port1__read ;
  assign m_stg_10_rv$EN_port0__write =
	     m_stg_10_rv[66] && !m_stg_11_rv$port1__read[66] ;
  assign m_stg_10_rv$port1__read =
	     m_stg_10_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_10_rv ;
  assign m_stg_10_rv$EN_port1__write =
	     m_stg_9_rv[66] && !m_stg_10_rv$port1__read[66] ;
  assign m_stg_10_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_9_rv_port0__read__00_BIT_19_06_THEN_m_ETC___d220 } ;
  assign m_stg_10_rv$port2__read =
	     m_stg_10_rv$EN_port1__write ?
	       m_stg_10_rv$port1__write_1 :
	       m_stg_10_rv$port1__read ;
  assign m_stg_11_rv$EN_port0__write =
	     m_stg_11_rv[66] && !m_stg_12_rv$port1__read[66] ;
  assign m_stg_11_rv$port1__read =
	     m_stg_11_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_11_rv ;
  assign m_stg_11_rv$EN_port1__write =
	     m_stg_10_rv[66] && !m_stg_11_rv$port1__read[66] ;
  assign m_stg_11_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_10_rv_port0__read__22_BIT_19_28_THEN__ETC___d242 } ;
  assign m_stg_11_rv$port2__read =
	     m_stg_11_rv$EN_port1__write ?
	       m_stg_11_rv$port1__write_1 :
	       m_stg_11_rv$port1__read ;
  assign m_stg_12_rv$EN_port0__write =
	     m_stg_12_rv[66] && !m_stg_13_rv$port1__read[66] ;
  assign m_stg_12_rv$port1__read =
	     m_stg_12_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_12_rv ;
  assign m_stg_12_rv$EN_port1__write =
	     m_stg_11_rv[66] && !m_stg_12_rv$port1__read[66] ;
  assign m_stg_12_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_11_rv_port0__read__44_BIT_19_50_THEN__ETC___d264 } ;
  assign m_stg_12_rv$port2__read =
	     m_stg_12_rv$EN_port1__write ?
	       m_stg_12_rv$port1__write_1 :
	       m_stg_12_rv$port1__read ;
  assign m_stg_13_rv$EN_port0__write =
	     m_stg_13_rv[66] && !m_stg_14_rv$port1__read[66] ;
  assign m_stg_13_rv$port1__read =
	     m_stg_13_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_13_rv ;
  assign m_stg_13_rv$EN_port1__write =
	     m_stg_12_rv[66] && !m_stg_13_rv$port1__read[66] ;
  assign m_stg_13_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_12_rv_port0__read__66_BIT_19_72_THEN__ETC___d286 } ;
  assign m_stg_13_rv$port2__read =
	     m_stg_13_rv$EN_port1__write ?
	       m_stg_13_rv$port1__write_1 :
	       m_stg_13_rv$port1__read ;
  assign m_stg_14_rv$EN_port0__write =
	     m_stg_14_rv[66] && !m_stg_15_rv$port1__read[66] ;
  assign m_stg_14_rv$port1__read =
	     m_stg_14_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_14_rv ;
  assign m_stg_14_rv$EN_port1__write =
	     m_stg_13_rv[66] && !m_stg_14_rv$port1__read[66] ;
  assign m_stg_14_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_13_rv_port0__read__88_BIT_19_94_THEN__ETC___d308 } ;
  assign m_stg_14_rv$port2__read =
	     m_stg_14_rv$EN_port1__write ?
	       m_stg_14_rv$port1__write_1 :
	       m_stg_14_rv$port1__read ;
  assign m_stg_15_rv$EN_port0__write =
	     m_stg_15_rv[66] && !m_stg_16_rv$port1__read[66] ;
  assign m_stg_15_rv$port1__read =
	     m_stg_15_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_15_rv ;
  assign m_stg_15_rv$EN_port1__write =
	     m_stg_14_rv[66] && !m_stg_15_rv$port1__read[66] ;
  assign m_stg_15_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_14_rv_port0__read__10_BIT_19_16_THEN__ETC___d330 } ;
  assign m_stg_15_rv$port2__read =
	     m_stg_15_rv$EN_port1__write ?
	       m_stg_15_rv$port1__write_1 :
	       m_stg_15_rv$port1__read ;
  assign m_stg_16_rv$EN_port0__write =
	     m_stg_16_rv[66] && !m_stg_17_rv$port1__read[66] ;
  assign m_stg_16_rv$port1__read =
	     m_stg_16_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_16_rv ;
  assign m_stg_16_rv$EN_port1__write =
	     m_stg_15_rv[66] && !m_stg_16_rv$port1__read[66] ;
  assign m_stg_16_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_15_rv_port0__read__32_BIT_19_38_THEN__ETC___d352 } ;
  assign m_stg_16_rv$port2__read =
	     m_stg_16_rv$EN_port1__write ?
	       m_stg_16_rv$port1__write_1 :
	       m_stg_16_rv$port1__read ;
  assign m_stg_17_rv$EN_port0__write =
	     m_stg_17_rv[66] && !m_stg_18_rv$port1__read[66] ;
  assign m_stg_17_rv$port1__read =
	     m_stg_17_rv$EN_port0__write ?
	       m_stg_0_rv$port0__write_1 :
	       m_stg_17_rv ;
  assign m_stg_17_rv$EN_port1__write =
	     m_stg_16_rv[66] && !m_stg_17_rv$port1__read[66] ;
  assign m_stg_17_rv$port1__write_1 =
	     { 1'd1,
	       IF_m_stg_16_rv_port0__read__54_BIT_19_60_THEN__ETC___d374 } ;
  assign m_stg_17_rv$port2__read =
	     m_stg_17_rv$EN_port1__write ?
	       m_stg_17_rv$port1__write_1 :
	       m_stg_17_rv$port1__read ;
  assign m_stg_18_rv$port1__read =
	     EN_response_get ? m_stg_0_rv$port0__write_1 : m_stg_18_rv ;
  assign m_stg_18_rv$EN_port1__write =
	     m_stg_17_rv[66] && !m_stg_18_rv$port1__read[66] ;
  assign m_stg_18_rv$port1__write_1 =
	     { 1'd1,
	       m_stg_17_rv[65:43] + (m_stg_17_rv[49] ? 23'd32 : 23'd31),
	       m_stg_17_rv[42:20] + (m_stg_17_rv[26] ? 23'd32 : 23'd31),
	       m_stg_17_rv[19:0] + (m_stg_17_rv[4] ? 20'd8 : 20'd7) } ;
  assign m_stg_18_rv$port2__read =
	     m_stg_18_rv$EN_port1__write ?
	       m_stg_18_rv$port1__write_1 :
	       m_stg_18_rv$port1__read ;

  // register m_stg_0_rv
  assign m_stg_0_rv$D_IN = m_stg_0_rv$port2__read ;
  assign m_stg_0_rv$EN = 1'b1 ;

  // register m_stg_10_rv
  assign m_stg_10_rv$D_IN = m_stg_10_rv$port2__read ;
  assign m_stg_10_rv$EN = 1'b1 ;

  // register m_stg_11_rv
  assign m_stg_11_rv$D_IN = m_stg_11_rv$port2__read ;
  assign m_stg_11_rv$EN = 1'b1 ;

  // register m_stg_12_rv
  assign m_stg_12_rv$D_IN = m_stg_12_rv$port2__read ;
  assign m_stg_12_rv$EN = 1'b1 ;

  // register m_stg_13_rv
  assign m_stg_13_rv$D_IN = m_stg_13_rv$port2__read ;
  assign m_stg_13_rv$EN = 1'b1 ;

  // register m_stg_14_rv
  assign m_stg_14_rv$D_IN = m_stg_14_rv$port2__read ;
  assign m_stg_14_rv$EN = 1'b1 ;

  // register m_stg_15_rv
  assign m_stg_15_rv$D_IN = m_stg_15_rv$port2__read ;
  assign m_stg_15_rv$EN = 1'b1 ;

  // register m_stg_16_rv
  assign m_stg_16_rv$D_IN = m_stg_16_rv$port2__read ;
  assign m_stg_16_rv$EN = 1'b1 ;

  // register m_stg_17_rv
  assign m_stg_17_rv$D_IN = m_stg_17_rv$port2__read ;
  assign m_stg_17_rv$EN = 1'b1 ;

  // register m_stg_18_rv
  assign m_stg_18_rv$D_IN = m_stg_18_rv$port2__read ;
  assign m_stg_18_rv$EN = 1'b1 ;

  // register m_stg_1_rv
  assign m_stg_1_rv$D_IN = m_stg_1_rv$port2__read ;
  assign m_stg_1_rv$EN = 1'b1 ;

  // register m_stg_2_rv
  assign m_stg_2_rv$D_IN = m_stg_2_rv$port2__read ;
  assign m_stg_2_rv$EN = 1'b1 ;

  // register m_stg_3_rv
  assign m_stg_3_rv$D_IN = m_stg_3_rv$port2__read ;
  assign m_stg_3_rv$EN = 1'b1 ;

  // register m_stg_4_rv
  assign m_stg_4_rv$D_IN = m_stg_4_rv$port2__read ;
  assign m_stg_4_rv$EN = 1'b1 ;

  // register m_stg_5_rv
  assign m_stg_5_rv$D_IN = m_stg_5_rv$port2__read ;
  assign m_stg_5_rv$EN = 1'b1 ;

  // register m_stg_6_rv
  assign m_stg_6_rv$D_IN = m_stg_6_rv$port2__read ;
  assign m_stg_6_rv$EN = 1'b1 ;

  // register m_stg_7_rv
  assign m_stg_7_rv$D_IN = m_stg_7_rv$port2__read ;
  assign m_stg_7_rv$EN = 1'b1 ;

  // register m_stg_8_rv
  assign m_stg_8_rv$D_IN = m_stg_8_rv$port2__read ;
  assign m_stg_8_rv$EN = 1'b1 ;

  // register m_stg_9_rv
  assign m_stg_9_rv$D_IN = m_stg_9_rv$port2__read ;
  assign m_stg_9_rv$EN = 1'b1 ;

  // remaining internal signals
  assign IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d419 =
	     { SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d412 ?
		 { SEXT_request_put_BITS_47_TO_328__q79[16:0], 6'd0 } :
		 -{ SEXT_request_put_BITS_31_TO_160__q81[16:0], 6'd0 },
	       SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d412 ?
		 SEXT_request_put_BITS_31_TO_160__q81[16:0] :
		 SEXT_request_put_BITS_47_TO_328__q79[16:0],
	       6'd0,
	       SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d412 ?
		 SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 :
		 SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 -
		 20'd262144 } ;
  assign IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d420 =
	     ((SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 ^
	       20'h80000) <
	      20'd262144) ?
	       { SEXT_request_put_BITS_31_TO_160__q81[16:0],
		 6'd0,
		 -{ SEXT_request_put_BITS_47_TO_328__q79[16:0], 6'd0 },
		 SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 +
		 20'd262144 } :
	       IF_SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_ETC___d419 ;
  assign IF_m_stg_0_rv_port0__read_BIT_19_THEN_m_stg_0__ETC___d22 =
	     m_stg_0_rv[19] ?
	       { m_stg_0_rv[65:43] +
		 m_stg_0_rv_port0__read_BITS_42_TO_20_0_SRA_0___d11,
		 m_stg_0_rv[42:20] -
		 m_stg_0_rv_port0__read_BITS_65_TO_43_SRA_0___d13,
		 m_stg_0_rv[19:0] + 20'd131072 } :
	       { m_stg_0_rv[65:43] -
		 m_stg_0_rv_port0__read_BITS_42_TO_20_0_SRA_0___d11,
		 m_stg_0_rv[42:20] +
		 m_stg_0_rv_port0__read_BITS_65_TO_43_SRA_0___d13,
		 m_stg_0_rv[19:0] - 20'd131072 } ;
  assign IF_m_stg_10_rv_port0__read__22_BIT_19_28_THEN__ETC___d242 =
	     m_stg_10_rv[19] ?
	       { m_stg_10_rv[65:43] +
		 m_stg_10_rv_port0__read__22_BITS_42_TO_20_30_S_ETC___d231,
		 m_stg_10_rv[42:20] -
		 m_stg_10_rv_port0__read__22_BITS_65_TO_43_29_S_ETC___d233,
		 m_stg_10_rv[19:0] + 20'd163 } :
	       { m_stg_10_rv[65:43] -
		 m_stg_10_rv_port0__read__22_BITS_42_TO_20_30_S_ETC___d231,
		 m_stg_10_rv[42:20] +
		 m_stg_10_rv_port0__read__22_BITS_65_TO_43_29_S_ETC___d233,
		 m_stg_10_rv[19:0] - 20'd163 } ;
  assign IF_m_stg_11_rv_port0__read__44_BIT_19_50_THEN__ETC___d264 =
	     m_stg_11_rv[19] ?
	       { m_stg_11_rv[65:43] +
		 m_stg_11_rv_port0__read__44_BITS_42_TO_20_52_S_ETC___d253,
		 m_stg_11_rv[42:20] -
		 m_stg_11_rv_port0__read__44_BITS_65_TO_43_51_S_ETC___d255,
		 m_stg_11_rv[19:0] + 20'd81 } :
	       { m_stg_11_rv[65:43] -
		 m_stg_11_rv_port0__read__44_BITS_42_TO_20_52_S_ETC___d253,
		 m_stg_11_rv[42:20] +
		 m_stg_11_rv_port0__read__44_BITS_65_TO_43_51_S_ETC___d255,
		 m_stg_11_rv[19:0] - 20'd81 } ;
  assign IF_m_stg_12_rv_port0__read__66_BIT_19_72_THEN__ETC___d286 =
	     m_stg_12_rv[19] ?
	       { m_stg_12_rv[65:43] +
		 m_stg_12_rv_port0__read__66_BITS_42_TO_20_74_S_ETC___d275,
		 m_stg_12_rv[42:20] -
		 m_stg_12_rv_port0__read__66_BITS_65_TO_43_73_S_ETC___d277,
		 m_stg_12_rv[19:0] + 20'd41 } :
	       { m_stg_12_rv[65:43] -
		 m_stg_12_rv_port0__read__66_BITS_42_TO_20_74_S_ETC___d275,
		 m_stg_12_rv[42:20] +
		 m_stg_12_rv_port0__read__66_BITS_65_TO_43_73_S_ETC___d277,
		 m_stg_12_rv[19:0] - 20'd41 } ;
  assign IF_m_stg_13_rv_port0__read__88_BIT_19_94_THEN__ETC___d308 =
	     m_stg_13_rv[19] ?
	       { m_stg_13_rv[65:43] +
		 m_stg_13_rv_port0__read__88_BITS_42_TO_20_96_S_ETC___d297,
		 m_stg_13_rv[42:20] -
		 m_stg_13_rv_port0__read__88_BITS_65_TO_43_95_S_ETC___d299,
		 m_stg_13_rv[19:0] + 20'd20 } :
	       { m_stg_13_rv[65:43] -
		 m_stg_13_rv_port0__read__88_BITS_42_TO_20_96_S_ETC___d297,
		 m_stg_13_rv[42:20] +
		 m_stg_13_rv_port0__read__88_BITS_65_TO_43_95_S_ETC___d299,
		 m_stg_13_rv[19:0] - 20'd20 } ;
  assign IF_m_stg_14_rv_port0__read__10_BIT_19_16_THEN__ETC___d330 =
	     m_stg_14_rv[19] ?
	       { m_stg_14_rv[65:43] +
		 m_stg_14_rv_port0__read__10_BITS_42_TO_20_18_S_ETC___d319,
		 m_stg_14_rv[42:20] -
		 m_stg_14_rv_port0__read__10_BITS_65_TO_43_17_S_ETC___d321,
		 m_stg_14_rv[19:0] + 20'd10 } :
	       { m_stg_14_rv[65:43] -
		 m_stg_14_rv_port0__read__10_BITS_42_TO_20_18_S_ETC___d319,
		 m_stg_14_rv[42:20] +
		 m_stg_14_rv_port0__read__10_BITS_65_TO_43_17_S_ETC___d321,
		 m_stg_14_rv[19:0] - 20'd10 } ;
  assign IF_m_stg_15_rv_port0__read__32_BIT_19_38_THEN__ETC___d352 =
	     m_stg_15_rv[19] ?
	       { m_stg_15_rv[65:43] +
		 m_stg_15_rv_port0__read__32_BITS_42_TO_20_40_S_ETC___d341,
		 m_stg_15_rv[42:20] -
		 m_stg_15_rv_port0__read__32_BITS_65_TO_43_39_S_ETC___d343,
		 m_stg_15_rv[19:0] + 20'd5 } :
	       { m_stg_15_rv[65:43] -
		 m_stg_15_rv_port0__read__32_BITS_42_TO_20_40_S_ETC___d341,
		 m_stg_15_rv[42:20] +
		 m_stg_15_rv_port0__read__32_BITS_65_TO_43_39_S_ETC___d343,
		 m_stg_15_rv[19:0] - 20'd5 } ;
  assign IF_m_stg_16_rv_port0__read__54_BIT_19_60_THEN__ETC___d374 =
	     m_stg_16_rv[19] ?
	       { m_stg_16_rv[65:43] +
		 m_stg_16_rv_port0__read__54_BITS_42_TO_20_62_S_ETC___d363,
		 m_stg_16_rv[42:20] -
		 m_stg_16_rv_port0__read__54_BITS_65_TO_43_61_S_ETC___d365,
		 m_stg_16_rv[19:0] + 20'd3 } :
	       { m_stg_16_rv[65:43] -
		 m_stg_16_rv_port0__read__54_BITS_42_TO_20_62_S_ETC___d363,
		 m_stg_16_rv[42:20] +
		 m_stg_16_rv_port0__read__54_BITS_65_TO_43_61_S_ETC___d365,
		 m_stg_16_rv[19:0] - 20'd3 } ;
  assign IF_m_stg_1_rv_port0__read__4_BIT_19_0_THEN_m_s_ETC___d44 =
	     m_stg_1_rv[19] ?
	       { m_stg_1_rv[65:43] +
		 m_stg_1_rv_port0__read__4_BITS_42_TO_20_2_SRA_1___d33,
		 m_stg_1_rv[42:20] -
		 m_stg_1_rv_port0__read__4_BITS_65_TO_43_1_SRA_1___d35,
		 m_stg_1_rv[19:0] + 20'd77376 } :
	       { m_stg_1_rv[65:43] -
		 m_stg_1_rv_port0__read__4_BITS_42_TO_20_2_SRA_1___d33,
		 m_stg_1_rv[42:20] +
		 m_stg_1_rv_port0__read__4_BITS_65_TO_43_1_SRA_1___d35,
		 m_stg_1_rv[19:0] - 20'd77376 } ;
  assign IF_m_stg_2_rv_port0__read__6_BIT_19_2_THEN_m_s_ETC___d66 =
	     m_stg_2_rv[19] ?
	       { m_stg_2_rv[65:43] +
		 m_stg_2_rv_port0__read__6_BITS_42_TO_20_4_SRA_2___d55,
		 m_stg_2_rv[42:20] -
		 m_stg_2_rv_port0__read__6_BITS_65_TO_43_3_SRA_2___d57,
		 m_stg_2_rv[19:0] + 20'd40884 } :
	       { m_stg_2_rv[65:43] -
		 m_stg_2_rv_port0__read__6_BITS_42_TO_20_4_SRA_2___d55,
		 m_stg_2_rv[42:20] +
		 m_stg_2_rv_port0__read__6_BITS_65_TO_43_3_SRA_2___d57,
		 m_stg_2_rv[19:0] - 20'd40884 } ;
  assign IF_m_stg_3_rv_port0__read__8_BIT_19_4_THEN_m_s_ETC___d88 =
	     m_stg_3_rv[19] ?
	       { m_stg_3_rv[65:43] +
		 m_stg_3_rv_port0__read__8_BITS_42_TO_20_6_SRA_3___d77,
		 m_stg_3_rv[42:20] -
		 m_stg_3_rv_port0__read__8_BITS_65_TO_43_5_SRA_3___d79,
		 m_stg_3_rv[19:0] + 20'd20753 } :
	       { m_stg_3_rv[65:43] -
		 m_stg_3_rv_port0__read__8_BITS_42_TO_20_6_SRA_3___d77,
		 m_stg_3_rv[42:20] +
		 m_stg_3_rv_port0__read__8_BITS_65_TO_43_5_SRA_3___d79,
		 m_stg_3_rv[19:0] - 20'd20753 } ;
  assign IF_m_stg_4_rv_port0__read__0_BIT_19_6_THEN_m_s_ETC___d110 =
	     m_stg_4_rv[19] ?
	       { m_stg_4_rv[65:43] +
		 m_stg_4_rv_port0__read__0_BITS_42_TO_20_8_SRA_4___d99,
		 m_stg_4_rv[42:20] -
		 m_stg_4_rv_port0__read__0_BITS_65_TO_43_7_SRA_4___d101,
		 m_stg_4_rv[19:0] + 20'd10417 } :
	       { m_stg_4_rv[65:43] -
		 m_stg_4_rv_port0__read__0_BITS_42_TO_20_8_SRA_4___d99,
		 m_stg_4_rv[42:20] +
		 m_stg_4_rv_port0__read__0_BITS_65_TO_43_7_SRA_4___d101,
		 m_stg_4_rv[19:0] - 20'd10417 } ;
  assign IF_m_stg_5_rv_port0__read__12_BIT_19_18_THEN_m_ETC___d132 =
	     m_stg_5_rv[19] ?
	       { m_stg_5_rv[65:43] +
		 m_stg_5_rv_port0__read__12_BITS_42_TO_20_20_SRA_5___d121,
		 m_stg_5_rv[42:20] -
		 m_stg_5_rv_port0__read__12_BITS_65_TO_43_19_SRA_5___d123,
		 m_stg_5_rv[19:0] + 20'd5213 } :
	       { m_stg_5_rv[65:43] -
		 m_stg_5_rv_port0__read__12_BITS_42_TO_20_20_SRA_5___d121,
		 m_stg_5_rv[42:20] +
		 m_stg_5_rv_port0__read__12_BITS_65_TO_43_19_SRA_5___d123,
		 m_stg_5_rv[19:0] - 20'd5213 } ;
  assign IF_m_stg_6_rv_port0__read__34_BIT_19_40_THEN_m_ETC___d154 =
	     m_stg_6_rv[19] ?
	       { m_stg_6_rv[65:43] +
		 m_stg_6_rv_port0__read__34_BITS_42_TO_20_42_SRA_6___d143,
		 m_stg_6_rv[42:20] -
		 m_stg_6_rv_port0__read__34_BITS_65_TO_43_41_SRA_6___d145,
		 m_stg_6_rv[19:0] + 20'd2607 } :
	       { m_stg_6_rv[65:43] -
		 m_stg_6_rv_port0__read__34_BITS_42_TO_20_42_SRA_6___d143,
		 m_stg_6_rv[42:20] +
		 m_stg_6_rv_port0__read__34_BITS_65_TO_43_41_SRA_6___d145,
		 m_stg_6_rv[19:0] - 20'd2607 } ;
  assign IF_m_stg_7_rv_port0__read__56_BIT_19_62_THEN_m_ETC___d176 =
	     m_stg_7_rv[19] ?
	       { m_stg_7_rv[65:43] +
		 m_stg_7_rv_port0__read__56_BITS_42_TO_20_64_SRA_7___d165,
		 m_stg_7_rv[42:20] -
		 m_stg_7_rv_port0__read__56_BITS_65_TO_43_63_SRA_7___d167,
		 m_stg_7_rv[19:0] + 20'd1304 } :
	       { m_stg_7_rv[65:43] -
		 m_stg_7_rv_port0__read__56_BITS_42_TO_20_64_SRA_7___d165,
		 m_stg_7_rv[42:20] +
		 m_stg_7_rv_port0__read__56_BITS_65_TO_43_63_SRA_7___d167,
		 m_stg_7_rv[19:0] - 20'd1304 } ;
  assign IF_m_stg_8_rv_port0__read__78_BIT_19_84_THEN_m_ETC___d198 =
	     m_stg_8_rv[19] ?
	       { m_stg_8_rv[65:43] +
		 m_stg_8_rv_port0__read__78_BITS_42_TO_20_86_SRA_8___d187,
		 m_stg_8_rv[42:20] -
		 m_stg_8_rv_port0__read__78_BITS_65_TO_43_85_SRA_8___d189,
		 m_stg_8_rv[19:0] + 20'd652 } :
	       { m_stg_8_rv[65:43] -
		 m_stg_8_rv_port0__read__78_BITS_42_TO_20_86_SRA_8___d187,
		 m_stg_8_rv[42:20] +
		 m_stg_8_rv_port0__read__78_BITS_65_TO_43_85_SRA_8___d189,
		 m_stg_8_rv[19:0] - 20'd652 } ;
  assign IF_m_stg_9_rv_port0__read__00_BIT_19_06_THEN_m_ETC___d220 =
	     m_stg_9_rv[19] ?
	       { m_stg_9_rv[65:43] +
		 m_stg_9_rv_port0__read__00_BITS_42_TO_20_08_SRA_9___d209,
		 m_stg_9_rv[42:20] -
		 m_stg_9_rv_port0__read__00_BITS_65_TO_43_07_SRA_9___d211,
		 m_stg_9_rv[19:0] + 20'd326 } :
	       { m_stg_9_rv[65:43] -
		 m_stg_9_rv_port0__read__00_BITS_42_TO_20_08_SRA_9___d209,
		 m_stg_9_rv[42:20] +
		 m_stg_9_rv_port0__read__00_BITS_65_TO_43_07_SRA_9___d211,
		 m_stg_9_rv[19:0] - 20'd326 } ;
  assign SEXT_m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q9 =
	     { {4{m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q8[15]}},
	       m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q8 } ;
  assign SEXT_m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q6 =
	     { {6{m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q5[16]}},
	       m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q5 } ;
  assign SEXT_m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q3 =
	     { {6{m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q2[16]}},
	       m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q2 } ;
  assign SEXT_request_put_BITS_15_TO_06__q77 =
	     { {4{request_put_BITS_15_TO_0__q76[15]}},
	       request_put_BITS_15_TO_0__q76 } ;
  assign SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 =
	     { SEXT_request_put_BITS_15_TO_06__q77[15:0], 4'd0 } ;
  assign SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d412 =
	     (SEXT_request_put_BITS_15_TO_0_96_97_BITS_15_TO_ETC___d399 ^
	      20'h80000) <
	     20'd786432 ;
  assign SEXT_request_put_BITS_31_TO_160__q81 =
	     { {7{request_put_BITS_31_TO_16__q80[15]}},
	       request_put_BITS_31_TO_16__q80 } ;
  assign SEXT_request_put_BITS_47_TO_328__q79 =
	     { {7{request_put_BITS_47_TO_32__q78[15]}},
	       request_put_BITS_47_TO_32__q78 } ;
  assign m_stg_0_rv_BITS_42_TO_20__q10 = m_stg_0_rv[42:20] ;
  assign m_stg_0_rv_BITS_65_TO_43__q15 = m_stg_0_rv[65:43] ;
  assign m_stg_0_rv_port0__read_BITS_42_TO_20_0_SRA_0___d11 =
	     m_stg_0_rv_BITS_42_TO_20__q10 ;
  assign m_stg_0_rv_port0__read_BITS_65_TO_43_SRA_0___d13 =
	     m_stg_0_rv_BITS_65_TO_43__q15 ;
  assign m_stg_10_rv_BITS_42_TO_208_BITS_22_TO_10__q49 =
	     m_stg_10_rv_BITS_42_TO_20__q48[22:10] ;
  assign m_stg_10_rv_BITS_42_TO_20__q48 = m_stg_10_rv[42:20] ;
  assign m_stg_10_rv_BITS_65_TO_430_BITS_22_TO_10__q51 =
	     m_stg_10_rv_BITS_65_TO_43__q50[22:10] ;
  assign m_stg_10_rv_BITS_65_TO_43__q50 = m_stg_10_rv[65:43] ;
  assign m_stg_10_rv_port0__read__22_BITS_42_TO_20_30_S_ETC___d231 =
	     { {10{m_stg_10_rv_BITS_42_TO_208_BITS_22_TO_10__q49[12]}},
	       m_stg_10_rv_BITS_42_TO_208_BITS_22_TO_10__q49 } ;
  assign m_stg_10_rv_port0__read__22_BITS_65_TO_43_29_S_ETC___d233 =
	     { {10{m_stg_10_rv_BITS_65_TO_430_BITS_22_TO_10__q51[12]}},
	       m_stg_10_rv_BITS_65_TO_430_BITS_22_TO_10__q51 } ;
  assign m_stg_11_rv_BITS_42_TO_202_BITS_22_TO_11__q53 =
	     m_stg_11_rv_BITS_42_TO_20__q52[22:11] ;
  assign m_stg_11_rv_BITS_42_TO_20__q52 = m_stg_11_rv[42:20] ;
  assign m_stg_11_rv_BITS_65_TO_434_BITS_22_TO_11__q55 =
	     m_stg_11_rv_BITS_65_TO_43__q54[22:11] ;
  assign m_stg_11_rv_BITS_65_TO_43__q54 = m_stg_11_rv[65:43] ;
  assign m_stg_11_rv_port0__read__44_BITS_42_TO_20_52_S_ETC___d253 =
	     { {11{m_stg_11_rv_BITS_42_TO_202_BITS_22_TO_11__q53[11]}},
	       m_stg_11_rv_BITS_42_TO_202_BITS_22_TO_11__q53 } ;
  assign m_stg_11_rv_port0__read__44_BITS_65_TO_43_51_S_ETC___d255 =
	     { {11{m_stg_11_rv_BITS_65_TO_434_BITS_22_TO_11__q55[11]}},
	       m_stg_11_rv_BITS_65_TO_434_BITS_22_TO_11__q55 } ;
  assign m_stg_12_rv_BITS_42_TO_206_BITS_22_TO_12__q57 =
	     m_stg_12_rv_BITS_42_TO_20__q56[22:12] ;
  assign m_stg_12_rv_BITS_42_TO_20__q56 = m_stg_12_rv[42:20] ;
  assign m_stg_12_rv_BITS_65_TO_438_BITS_22_TO_12__q59 =
	     m_stg_12_rv_BITS_65_TO_43__q58[22:12] ;
  assign m_stg_12_rv_BITS_65_TO_43__q58 = m_stg_12_rv[65:43] ;
  assign m_stg_12_rv_port0__read__66_BITS_42_TO_20_74_S_ETC___d275 =
	     { {12{m_stg_12_rv_BITS_42_TO_206_BITS_22_TO_12__q57[10]}},
	       m_stg_12_rv_BITS_42_TO_206_BITS_22_TO_12__q57 } ;
  assign m_stg_12_rv_port0__read__66_BITS_65_TO_43_73_S_ETC___d277 =
	     { {12{m_stg_12_rv_BITS_65_TO_438_BITS_22_TO_12__q59[10]}},
	       m_stg_12_rv_BITS_65_TO_438_BITS_22_TO_12__q59 } ;
  assign m_stg_13_rv_BITS_42_TO_200_BITS_22_TO_13__q61 =
	     m_stg_13_rv_BITS_42_TO_20__q60[22:13] ;
  assign m_stg_13_rv_BITS_42_TO_20__q60 = m_stg_13_rv[42:20] ;
  assign m_stg_13_rv_BITS_65_TO_432_BITS_22_TO_13__q63 =
	     m_stg_13_rv_BITS_65_TO_43__q62[22:13] ;
  assign m_stg_13_rv_BITS_65_TO_43__q62 = m_stg_13_rv[65:43] ;
  assign m_stg_13_rv_port0__read__88_BITS_42_TO_20_96_S_ETC___d297 =
	     { {13{m_stg_13_rv_BITS_42_TO_200_BITS_22_TO_13__q61[9]}},
	       m_stg_13_rv_BITS_42_TO_200_BITS_22_TO_13__q61 } ;
  assign m_stg_13_rv_port0__read__88_BITS_65_TO_43_95_S_ETC___d299 =
	     { {13{m_stg_13_rv_BITS_65_TO_432_BITS_22_TO_13__q63[9]}},
	       m_stg_13_rv_BITS_65_TO_432_BITS_22_TO_13__q63 } ;
  assign m_stg_14_rv_BITS_42_TO_204_BITS_22_TO_14__q65 =
	     m_stg_14_rv_BITS_42_TO_20__q64[22:14] ;
  assign m_stg_14_rv_BITS_42_TO_20__q64 = m_stg_14_rv[42:20] ;
  assign m_stg_14_rv_BITS_65_TO_436_BITS_22_TO_14__q67 =
	     m_stg_14_rv_BITS_65_TO_43__q66[22:14] ;
  assign m_stg_14_rv_BITS_65_TO_43__q66 = m_stg_14_rv[65:43] ;
  assign m_stg_14_rv_port0__read__10_BITS_42_TO_20_18_S_ETC___d319 =
	     { {14{m_stg_14_rv_BITS_42_TO_204_BITS_22_TO_14__q65[8]}},
	       m_stg_14_rv_BITS_42_TO_204_BITS_22_TO_14__q65 } ;
  assign m_stg_14_rv_port0__read__10_BITS_65_TO_43_17_S_ETC___d321 =
	     { {14{m_stg_14_rv_BITS_65_TO_436_BITS_22_TO_14__q67[8]}},
	       m_stg_14_rv_BITS_65_TO_436_BITS_22_TO_14__q67 } ;
  assign m_stg_15_rv_BITS_42_TO_208_BITS_22_TO_15__q69 =
	     m_stg_15_rv_BITS_42_TO_20__q68[22:15] ;
  assign m_stg_15_rv_BITS_42_TO_20__q68 = m_stg_15_rv[42:20] ;
  assign m_stg_15_rv_BITS_65_TO_430_BITS_22_TO_15__q71 =
	     m_stg_15_rv_BITS_65_TO_43__q70[22:15] ;
  assign m_stg_15_rv_BITS_65_TO_43__q70 = m_stg_15_rv[65:43] ;
  assign m_stg_15_rv_port0__read__32_BITS_42_TO_20_40_S_ETC___d341 =
	     { {15{m_stg_15_rv_BITS_42_TO_208_BITS_22_TO_15__q69[7]}},
	       m_stg_15_rv_BITS_42_TO_208_BITS_22_TO_15__q69 } ;
  assign m_stg_15_rv_port0__read__32_BITS_65_TO_43_39_S_ETC___d343 =
	     { {15{m_stg_15_rv_BITS_65_TO_430_BITS_22_TO_15__q71[7]}},
	       m_stg_15_rv_BITS_65_TO_430_BITS_22_TO_15__q71 } ;
  assign m_stg_16_rv_BITS_42_TO_202_BITS_22_TO_16__q73 =
	     m_stg_16_rv_BITS_42_TO_20__q72[22:16] ;
  assign m_stg_16_rv_BITS_42_TO_20__q72 = m_stg_16_rv[42:20] ;
  assign m_stg_16_rv_BITS_65_TO_434_BITS_22_TO_16__q75 =
	     m_stg_16_rv_BITS_65_TO_43__q74[22:16] ;
  assign m_stg_16_rv_BITS_65_TO_43__q74 = m_stg_16_rv[65:43] ;
  assign m_stg_16_rv_port0__read__54_BITS_42_TO_20_62_S_ETC___d363 =
	     { {16{m_stg_16_rv_BITS_42_TO_202_BITS_22_TO_16__q73[6]}},
	       m_stg_16_rv_BITS_42_TO_202_BITS_22_TO_16__q73 } ;
  assign m_stg_16_rv_port0__read__54_BITS_65_TO_43_61_S_ETC___d365 =
	     { {16{m_stg_16_rv_BITS_65_TO_434_BITS_22_TO_16__q75[6]}},
	       m_stg_16_rv_BITS_65_TO_434_BITS_22_TO_16__q75 } ;
  assign m_stg_18_rv_BITS_19_TO_0_BITS_19_TO_4__q8 =
	     m_stg_18_rv_BITS_19_TO_0__q7[19:4] ;
  assign m_stg_18_rv_BITS_19_TO_0__q7 = m_stg_18_rv[19:0] ;
  assign m_stg_18_rv_BITS_42_TO_20_BITS_22_TO_6__q5 =
	     m_stg_18_rv_BITS_42_TO_20__q4[22:6] ;
  assign m_stg_18_rv_BITS_42_TO_20__q4 = m_stg_18_rv[42:20] ;
  assign m_stg_18_rv_BITS_65_TO_43_BITS_22_TO_6__q2 =
	     m_stg_18_rv_BITS_65_TO_43__q1[22:6] ;
  assign m_stg_18_rv_BITS_65_TO_43__q1 = m_stg_18_rv[65:43] ;
  assign m_stg_1_rv_BITS_42_TO_203_BITS_22_TO_1__q14 =
	     m_stg_1_rv_BITS_42_TO_20__q13[22:1] ;
  assign m_stg_1_rv_BITS_42_TO_20__q13 = m_stg_1_rv[42:20] ;
  assign m_stg_1_rv_BITS_65_TO_431_BITS_22_TO_1__q12 =
	     m_stg_1_rv_BITS_65_TO_43__q11[22:1] ;
  assign m_stg_1_rv_BITS_65_TO_43__q11 = m_stg_1_rv[65:43] ;
  assign m_stg_1_rv_port0__read__4_BITS_42_TO_20_2_SRA_1___d33 =
	     { m_stg_1_rv_BITS_42_TO_203_BITS_22_TO_1__q14[21],
	       m_stg_1_rv_BITS_42_TO_203_BITS_22_TO_1__q14 } ;
  assign m_stg_1_rv_port0__read__4_BITS_65_TO_43_1_SRA_1___d35 =
	     { m_stg_1_rv_BITS_65_TO_431_BITS_22_TO_1__q12[21],
	       m_stg_1_rv_BITS_65_TO_431_BITS_22_TO_1__q12 } ;
  assign m_stg_2_rv_BITS_42_TO_206_BITS_22_TO_2__q17 =
	     m_stg_2_rv_BITS_42_TO_20__q16[22:2] ;
  assign m_stg_2_rv_BITS_42_TO_20__q16 = m_stg_2_rv[42:20] ;
  assign m_stg_2_rv_BITS_65_TO_438_BITS_22_TO_2__q19 =
	     m_stg_2_rv_BITS_65_TO_43__q18[22:2] ;
  assign m_stg_2_rv_BITS_65_TO_43__q18 = m_stg_2_rv[65:43] ;
  assign m_stg_2_rv_port0__read__6_BITS_42_TO_20_4_SRA_2___d55 =
	     { {2{m_stg_2_rv_BITS_42_TO_206_BITS_22_TO_2__q17[20]}},
	       m_stg_2_rv_BITS_42_TO_206_BITS_22_TO_2__q17 } ;
  assign m_stg_2_rv_port0__read__6_BITS_65_TO_43_3_SRA_2___d57 =
	     { {2{m_stg_2_rv_BITS_65_TO_438_BITS_22_TO_2__q19[20]}},
	       m_stg_2_rv_BITS_65_TO_438_BITS_22_TO_2__q19 } ;
  assign m_stg_3_rv_BITS_42_TO_200_BITS_22_TO_3__q21 =
	     m_stg_3_rv_BITS_42_TO_20__q20[22:3] ;
  assign m_stg_3_rv_BITS_42_TO_20__q20 = m_stg_3_rv[42:20] ;
  assign m_stg_3_rv_BITS_65_TO_432_BITS_22_TO_3__q23 =
	     m_stg_3_rv_BITS_65_TO_43__q22[22:3] ;
  assign m_stg_3_rv_BITS_65_TO_43__q22 = m_stg_3_rv[65:43] ;
  assign m_stg_3_rv_port0__read__8_BITS_42_TO_20_6_SRA_3___d77 =
	     { {3{m_stg_3_rv_BITS_42_TO_200_BITS_22_TO_3__q21[19]}},
	       m_stg_3_rv_BITS_42_TO_200_BITS_22_TO_3__q21 } ;
  assign m_stg_3_rv_port0__read__8_BITS_65_TO_43_5_SRA_3___d79 =
	     { {3{m_stg_3_rv_BITS_65_TO_432_BITS_22_TO_3__q23[19]}},
	       m_stg_3_rv_BITS_65_TO_432_BITS_22_TO_3__q23 } ;
  assign m_stg_4_rv_BITS_42_TO_204_BITS_22_TO_4__q25 =
	     m_stg_4_rv_BITS_42_TO_20__q24[22:4] ;
  assign m_stg_4_rv_BITS_42_TO_20__q24 = m_stg_4_rv[42:20] ;
  assign m_stg_4_rv_BITS_65_TO_436_BITS_22_TO_4__q27 =
	     m_stg_4_rv_BITS_65_TO_43__q26[22:4] ;
  assign m_stg_4_rv_BITS_65_TO_43__q26 = m_stg_4_rv[65:43] ;
  assign m_stg_4_rv_port0__read__0_BITS_42_TO_20_8_SRA_4___d99 =
	     { {4{m_stg_4_rv_BITS_42_TO_204_BITS_22_TO_4__q25[18]}},
	       m_stg_4_rv_BITS_42_TO_204_BITS_22_TO_4__q25 } ;
  assign m_stg_4_rv_port0__read__0_BITS_65_TO_43_7_SRA_4___d101 =
	     { {4{m_stg_4_rv_BITS_65_TO_436_BITS_22_TO_4__q27[18]}},
	       m_stg_4_rv_BITS_65_TO_436_BITS_22_TO_4__q27 } ;
  assign m_stg_5_rv_BITS_42_TO_208_BITS_22_TO_5__q29 =
	     m_stg_5_rv_BITS_42_TO_20__q28[22:5] ;
  assign m_stg_5_rv_BITS_42_TO_20__q28 = m_stg_5_rv[42:20] ;
  assign m_stg_5_rv_BITS_65_TO_430_BITS_22_TO_5__q31 =
	     m_stg_5_rv_BITS_65_TO_43__q30[22:5] ;
  assign m_stg_5_rv_BITS_65_TO_43__q30 = m_stg_5_rv[65:43] ;
  assign m_stg_5_rv_port0__read__12_BITS_42_TO_20_20_SRA_5___d121 =
	     { {5{m_stg_5_rv_BITS_42_TO_208_BITS_22_TO_5__q29[17]}},
	       m_stg_5_rv_BITS_42_TO_208_BITS_22_TO_5__q29 } ;
  assign m_stg_5_rv_port0__read__12_BITS_65_TO_43_19_SRA_5___d123 =
	     { {5{m_stg_5_rv_BITS_65_TO_430_BITS_22_TO_5__q31[17]}},
	       m_stg_5_rv_BITS_65_TO_430_BITS_22_TO_5__q31 } ;
  assign m_stg_6_rv_BITS_42_TO_202_BITS_22_TO_6__q33 =
	     m_stg_6_rv_BITS_42_TO_20__q32[22:6] ;
  assign m_stg_6_rv_BITS_42_TO_20__q32 = m_stg_6_rv[42:20] ;
  assign m_stg_6_rv_BITS_65_TO_434_BITS_22_TO_6__q35 =
	     m_stg_6_rv_BITS_65_TO_43__q34[22:6] ;
  assign m_stg_6_rv_BITS_65_TO_43__q34 = m_stg_6_rv[65:43] ;
  assign m_stg_6_rv_port0__read__34_BITS_42_TO_20_42_SRA_6___d143 =
	     { {6{m_stg_6_rv_BITS_42_TO_202_BITS_22_TO_6__q33[16]}},
	       m_stg_6_rv_BITS_42_TO_202_BITS_22_TO_6__q33 } ;
  assign m_stg_6_rv_port0__read__34_BITS_65_TO_43_41_SRA_6___d145 =
	     { {6{m_stg_6_rv_BITS_65_TO_434_BITS_22_TO_6__q35[16]}},
	       m_stg_6_rv_BITS_65_TO_434_BITS_22_TO_6__q35 } ;
  assign m_stg_7_rv_BITS_42_TO_206_BITS_22_TO_7__q37 =
	     m_stg_7_rv_BITS_42_TO_20__q36[22:7] ;
  assign m_stg_7_rv_BITS_42_TO_20__q36 = m_stg_7_rv[42:20] ;
  assign m_stg_7_rv_BITS_65_TO_438_BITS_22_TO_7__q39 =
	     m_stg_7_rv_BITS_65_TO_43__q38[22:7] ;
  assign m_stg_7_rv_BITS_65_TO_43__q38 = m_stg_7_rv[65:43] ;
  assign m_stg_7_rv_port0__read__56_BITS_42_TO_20_64_SRA_7___d165 =
	     { {7{m_stg_7_rv_BITS_42_TO_206_BITS_22_TO_7__q37[15]}},
	       m_stg_7_rv_BITS_42_TO_206_BITS_22_TO_7__q37 } ;
  assign m_stg_7_rv_port0__read__56_BITS_65_TO_43_63_SRA_7___d167 =
	     { {7{m_stg_7_rv_BITS_65_TO_438_BITS_22_TO_7__q39[15]}},
	       m_stg_7_rv_BITS_65_TO_438_BITS_22_TO_7__q39 } ;
  assign m_stg_8_rv_BITS_42_TO_200_BITS_22_TO_8__q41 =
	     m_stg_8_rv_BITS_42_TO_20__q40[22:8] ;
  assign m_stg_8_rv_BITS_42_TO_20__q40 = m_stg_8_rv[42:20] ;
  assign m_stg_8_rv_BITS_65_TO_432_BITS_22_TO_8__q43 =
	     m_stg_8_rv_BITS_65_TO_43__q42[22:8] ;
  assign m_stg_8_rv_BITS_65_TO_43__q42 = m_stg_8_rv[65:43] ;
  assign m_stg_8_rv_port0__read__78_BITS_42_TO_20_86_SRA_8___d187 =
	     { {8{m_stg_8_rv_BITS_42_TO_200_BITS_22_TO_8__q41[14]}},
	       m_stg_8_rv_BITS_42_TO_200_BITS_22_TO_8__q41 } ;
  assign m_stg_8_rv_port0__read__78_BITS_65_TO_43_85_SRA_8___d189 =
	     { {8{m_stg_8_rv_BITS_65_TO_432_BITS_22_TO_8__q43[14]}},
	       m_stg_8_rv_BITS_65_TO_432_BITS_22_TO_8__q43 } ;
  assign m_stg_9_rv_BITS_42_TO_204_BITS_22_TO_9__q45 =
	     m_stg_9_rv_BITS_42_TO_20__q44[22:9] ;
  assign m_stg_9_rv_BITS_42_TO_20__q44 = m_stg_9_rv[42:20] ;
  assign m_stg_9_rv_BITS_65_TO_436_BITS_22_TO_9__q47 =
	     m_stg_9_rv_BITS_65_TO_43__q46[22:9] ;
  assign m_stg_9_rv_BITS_65_TO_43__q46 = m_stg_9_rv[65:43] ;
  assign m_stg_9_rv_port0__read__00_BITS_42_TO_20_08_SRA_9___d209 =
	     { {9{m_stg_9_rv_BITS_42_TO_204_BITS_22_TO_9__q45[13]}},
	       m_stg_9_rv_BITS_42_TO_204_BITS_22_TO_9__q45 } ;
  assign m_stg_9_rv_port0__read__00_BITS_65_TO_43_07_SRA_9___d211 =
	     { {9{m_stg_9_rv_BITS_65_TO_436_BITS_22_TO_9__q47[13]}},
	       m_stg_9_rv_BITS_65_TO_436_BITS_22_TO_9__q47 } ;
  assign request_put_BITS_15_TO_0__q76 = request_put[15:0] ;
  assign request_put_BITS_31_TO_16__q80 = request_put[31:16] ;
  assign request_put_BITS_47_TO_32__q78 = request_put[47:32] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        m_stg_0_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_10_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_11_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_12_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_13_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_14_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_15_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_16_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_17_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_18_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_1_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_2_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_3_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_4_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_5_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_6_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_7_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_8_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	m_stg_9_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (m_stg_0_rv$EN)
	  m_stg_0_rv <= `BSV_ASSIGNMENT_DELAY m_stg_0_rv$D_IN;
	if (m_stg_10_rv$EN)
	  m_stg_10_rv <= `BSV_ASSIGNMENT_DELAY m_stg_10_rv$D_IN;
	if (m_stg_11_rv$EN)
	  m_stg_11_rv <= `BSV_ASSIGNMENT_DELAY m_stg_11_rv$D_IN;
	if (m_stg_12_rv$EN)
	  m_stg_12_rv <= `BSV_ASSIGNMENT_DELAY m_stg_12_rv$D_IN;
	if (m_stg_13_rv$EN)
	  m_stg_13_rv <= `BSV_ASSIGNMENT_DELAY m_stg_13_rv$D_IN;
	if (m_stg_14_rv$EN)
	  m_stg_14_rv <= `BSV_ASSIGNMENT_DELAY m_stg_14_rv$D_IN;
	if (m_stg_15_rv$EN)
	  m_stg_15_rv <= `BSV_ASSIGNMENT_DELAY m_stg_15_rv$D_IN;
	if (m_stg_16_rv$EN)
	  m_stg_16_rv <= `BSV_ASSIGNMENT_DELAY m_stg_16_rv$D_IN;
	if (m_stg_17_rv$EN)
	  m_stg_17_rv <= `BSV_ASSIGNMENT_DELAY m_stg_17_rv$D_IN;
	if (m_stg_18_rv$EN)
	  m_stg_18_rv <= `BSV_ASSIGNMENT_DELAY m_stg_18_rv$D_IN;
	if (m_stg_1_rv$EN)
	  m_stg_1_rv <= `BSV_ASSIGNMENT_DELAY m_stg_1_rv$D_IN;
	if (m_stg_2_rv$EN)
	  m_stg_2_rv <= `BSV_ASSIGNMENT_DELAY m_stg_2_rv$D_IN;
	if (m_stg_3_rv$EN)
	  m_stg_3_rv <= `BSV_ASSIGNMENT_DELAY m_stg_3_rv$D_IN;
	if (m_stg_4_rv$EN)
	  m_stg_4_rv <= `BSV_ASSIGNMENT_DELAY m_stg_4_rv$D_IN;
	if (m_stg_5_rv$EN)
	  m_stg_5_rv <= `BSV_ASSIGNMENT_DELAY m_stg_5_rv$D_IN;
	if (m_stg_6_rv$EN)
	  m_stg_6_rv <= `BSV_ASSIGNMENT_DELAY m_stg_6_rv$D_IN;
	if (m_stg_7_rv$EN)
	  m_stg_7_rv <= `BSV_ASSIGNMENT_DELAY m_stg_7_rv$D_IN;
	if (m_stg_8_rv$EN)
	  m_stg_8_rv <= `BSV_ASSIGNMENT_DELAY m_stg_8_rv$D_IN;
	if (m_stg_9_rv$EN)
	  m_stg_9_rv <= `BSV_ASSIGNMENT_DELAY m_stg_9_rv$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    m_stg_0_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_10_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_11_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_12_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_13_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_14_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_15_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_16_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_17_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_18_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_1_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_2_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_3_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_4_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_5_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_6_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_7_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_8_rv = 67'h2AAAAAAAAAAAAAAAA;
    m_stg_9_rv = 67'h2AAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkCORDIC_r_16

